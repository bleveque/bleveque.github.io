{"version":3,"sources":["StringRenderer.js","components/AriaButton.js","metadataParser.js","constants.js","components/StringRenderArea.js","asciiArt.js","pageDataGenerators/home.js","pageDataGenerators/projects.js","ImageConverter.js","components/TV.js","pageDataGenerators/tv.js","pageDataGenerators/work.js","pageDataGenerators/about.js","pageDataGenerators/index.js","pageDataGenerators/nav.js","animationHelper.js","components/HomePage.js","index.js"],"names":["LINK_REGEX","interpolate","a","b","t","shouldWrap","text","textIdx","x","initX","rendererWidth","maxWidth","rightMargin","nextBreakIdx","substring","search","nextBreakX","pushChunk","chunkMetadata","linkMetadata","chunkStart","chunkEnd","chunkProps","notTabbable","isFinite","Infinity","props","tabIndex","i","length","start","end","href","push","atStartOfLink","atEndOfLink","StringRenderer","width","height","data","this","content","textMetadata","breakWidth","interval","initialContent","finalContent","Array","join","interpolatedArr","maxLength","Math","max","String","fromCharCode","round","charCodeAt","chars","len","inputData","relativeY","type","renderText","renderTextrect","renderLine","fillEmptyEntriesAndAddLineBreaks","scanForAccessibility","sort","chunk1","chunk2","str","generateRenderData","y","out","initText","isYRelative","parseWidth","parseHeight","match","index","parseLinks","maxY","outIdx","getIdxWithBreaks","min","tabbableChunk","dx","dy","floor","onClick","startHeight","endHeight","startWidth","endWidth","startIdx","endIdx","dim","parseFloat","ceil","AriaButton","children","className","other","role","onKeyDown","evt","code","which","spaceOrEnter","preventDefault","stopPropagation","fontSize","elements","lastEnd","key","style","contentOffsets","navWidth","topBarHeight","isTouchScreen","navigator","maxTouchPoints","StringRenderArea","singleCharRef","React","createRef","doubleCharRef","singleCharWidth","singleCharHeight","windowCharWidth","windowCharHeight","verticalCharPadding","resizeHandler","stringRenderer","autoResize","resize","bind","window","addEventListener","charHeight","current","getBoundingClientRect","onSetCharDims","removeEventListener","fixedWidthPx","innerWidth","fixedHeightPx","innerHeight","setDimensions","forceUpdate","evaluateData","newData","finalTextMetadata","intermediateContent","interpolateContent","interpolationParameter","metadataParser","interpolateToNewData","setData","render","Fragment","ref","childElementDataGenerator","Component","DANCING","left","top","CHAR_GRADIENT","ImageConverter","characterWidth","characterHeight","charWidth","w","h","p","outRgba","inRgba","kernel","kernelWidth","kernelHalfWidth","kernelHalfHeight","rsum","gsum","bsum","xIdx","offset","r","g","kernelIdx","outOffset","fn","idx","forEachPixel","imageData","intensity","grayscaleImage","grayscale","horizConvolved","convolveKernel","vertConvolved","finalIntensity","sqrt","pow","invert","val","linearThresh","outCharacterWidth","aspectRatio","outCharacterHeight","rgb","block","imageCharacterWidth","imageCharacterHeight","pxOffset","pyOffset","ctr","py","roundPy","px","roundPx","pixelIndex","reduce","acc","getCharForVal","TV","state","paused","imageConverter","refreshRate","videoRef","canvasRef","frameData","frameConfig","setCharDims","setInterval","shouldRender","clearInterval","getCharWidthTvUnits","getCharHeightTvUnits","video","canvas","context","getContext","videoHeight","videoWidth","drawImage","getImageData","edgeModeOn","edgeDetection","putImageData","asciiImageArray","convert","tvWidthPx","tvHeightPx","setCharDimensions","setState","on","pause","play","getElementsFromVideo","getBlankScreenElements","controls","src","contentLeft","contentTop","CHANNELS","title","url","tvLeft","tvTop","tvChannelUpLeftOffset","tvOnLeftOffset","flooredLeftOffset","wrappedExplanation","home","stringRenderData","canFitHorizRegister","nameTop","webringTop","location","random","projects","tv","tvOn","setTvOn","tvChannel","setTvChannel","tvEdgeModeOn","setTvEdgeModeOn","tvDimMultiplier","setTvDimMultiplier","tvNowShowingText","stringRenderChildElementDataGenerator","tvFontSize","position","lineHeight","work","about","email","getNavProps","pageName","onNavClick","animationHelper","animationLength","intervalLength","onTick","onDone","timeInInterval","HomePage","pathname","useLocation","pageDataGenerators","hasOwnProperty","useState","setPageName","newPageData","setNewPageData","setInterpolationParameter","pageSpecificState","navRenderData","navDataGenerator","switchPage","newPageName","newStringRenderData","ReactDOM","path","document","getElementById"],"mappings":"mTAEMA,EAAa,iCAObC,EAAc,SAACC,EAAGC,EAAGC,GACzB,OAAOF,GAAK,EAAIE,GAAKD,EAAIC,GAerBC,EAAa,SAACC,EAAMC,EAASC,EAAGC,EAAOC,EAAeC,GAA+B,IAArBC,EAAoB,uDAAN,EAClF,GAAsB,OAAlBN,EAAKC,GAAmB,OAAO,EACnC,GAAII,EAAU,CAEZ,GAAIH,GAAKE,EAAgBE,GAAeJ,EAAIC,EAAQ,EAAIE,EACtD,OAAO,EAIT,GAAsB,MAAlBL,EAAKC,GAAkB,CACzB,IAAIM,EAAeP,EAAKQ,UAAUP,EAAU,GAAGQ,OAAO,SAEtD,GAAIF,GAAgB,EAAG,CAErB,IAAIG,GADJH,GAAgBN,EAAU,GACOA,EAAWC,EAE5C,GAAIQ,GAAcN,EAAgBE,GAAeI,EAAaP,EAAQ,EAAIE,EACxE,OAAO,IAKf,OAAO,GAGHM,EAAY,SAACC,EAAeX,EAASY,EAAcC,EAAYC,EAAUC,EAAYC,GACzF,IAAKC,SAASJ,KAAgBI,SAASH,KAAcH,EAAe,OAAOO,IAE3E,IAAIC,EAAQJ,EAAU,eAAQA,GAAe,KAO7C,GALIC,IACGG,IAAOA,EAAQ,IACpBA,EAAMC,SAAW,MAGfR,EACF,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAaU,OAAQD,IACvC,GAAIT,EAAaS,GAAGE,OAASvB,GAAWA,GAAWY,EAAaS,GAAGG,IAAK,EACtEL,EAAQA,GAAS,IACXM,KAAOb,EAAaS,GAAGI,KAC7B,MAMN,OADIN,GAAOR,EAAce,KAAK,CAAEH,MAAOV,EAAYW,IAAKV,EAAUK,UAC3DD,KAGHS,EAAgB,SAAC3B,EAASY,GAC9B,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAaU,OAAQD,IACvC,GAAIT,EAAaS,GAAGE,QAAUvB,EAAS,OAAO,EAEhD,OAAO,GAGH4B,EAAc,SAAC5B,EAASY,GAC5B,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAaU,OAAQD,IACvC,GAAIT,EAAaS,GAAGG,MAAQxB,EAAS,OAAO,EAE9C,OAAO,GAoPM6B,E,WAzOb,WAAYC,EAAOC,EAAQC,GAAO,oBAChCC,KAAKC,QAAU,GACfD,KAAKE,aAAe,GACpBF,KAAKD,KAAOA,GAAQ,GACpBC,KAAKH,MAAQA,EACbG,KAAKG,WAAaH,KAAKH,MAAQ,EAC/BG,KAAKF,OAASA,EACdE,KAAKI,SAAW,K,oDAGVL,GACNC,KAAKD,KAAOA,I,mCAIZ,OAAOC,KAAKC,U,iCAGHA,GACTD,KAAKC,QAAUA,I,wCAIf,OAAOD,KAAKE,e,yCAGKG,EAAgBC,EAAc1C,GAC3CyC,EAAehB,OAASiB,EAAajB,OACvCiB,GAAiB,IAAIC,MAAMF,EAAehB,OAASiB,EAAajB,OAAS,GAAImB,KAAK,KACzEF,EAAajB,OAASgB,EAAehB,SAC9CgB,GAAmB,IAAIE,MAAMD,EAAajB,OAASgB,EAAehB,OAAS,GAAImB,KAAK,MAKtF,IAHA,IAAIC,EAAkB,IAAIF,MAAMF,EAAehB,QAEzCqB,EAAYC,KAAKC,IAAIP,EAAehB,OAAQiB,EAAajB,QACtDD,EAAI,EAAGA,EAAIsB,EAAWtB,IACzBA,EAAIY,KAAKG,aAAeH,KAAKG,WAAa,EAC5CM,EAAgBrB,GAAK,KAErBqB,EAAgBrB,GAAKyB,OAAOC,aAAaH,KAAKI,MAAMtD,EAAY4C,EAAejB,GAAG4B,aAAcV,EAAalB,GAAG4B,aAAcpD,KAIlI,OAAO6C,EAAgBD,KAAK,M,uDAGGS,GAC/B,IAAK,IAAI7B,EAAI,EAAG8B,EAAMD,EAAM5B,OAAQD,EAAI8B,EAAK9B,IAC3C6B,EAAM7B,GAAK6B,EAAM7B,IAAM,IACnBA,EAAIY,KAAKG,aAAeH,KAAKG,WAAa,IAAGc,EAAM7B,GAAK,Q,2CAI3C6B,EAAOvC,M,yCAITyC,EAAWjB,GAI5B,IAHA,IAAIe,EAAQ,GACRG,EAAY,EAEPhC,EAAI,EAAGA,EAAI+B,EAAU9B,OAAQD,IACpC,GAAK+B,EAAU/B,GAAf,CADyC,MAGpB+B,EAAU/B,GAAxBiC,EAHkC,EAGlCA,KAAMtB,EAH4B,EAG5BA,KAEA,SAATsB,EACFD,EAAYpB,KAAKsB,WAAWL,EAAOf,EAAcH,EAAMqB,GACrC,aAATC,EACTD,EAAYpB,KAAKuB,eAAeN,EAAOf,EAAcH,EAAMqB,GACzC,SAATC,GACTrB,KAAKwB,WAAWP,EAAOf,EAAcH,GASzC,OALAC,KAAKyB,iCAAiCR,GACtCjB,KAAK0B,qBAAqBT,EAAOf,GAEjCA,EAAayB,MAAK,SAACC,EAAQC,GAAT,OAAoBD,EAAOtC,MAAQuC,EAAOvC,SAErD,CAAEwC,IAAKb,EAAMT,KAAK,IAAKN,kB,+BAI9BF,KAAKE,aAAab,OAAS,EADpB,MAGqBW,KAAK+B,mBAAmB/B,KAAKD,KAAMC,KAAKE,cAA9D4B,EAHC,EAGDA,IAHC,EAGI5B,aAIX,OAFAF,KAAKC,QAAU6B,EAER,CAAEA,IAAK9B,KAAKC,QAASC,aAAcF,KAAKE,gB,uCAGhClC,EAAGgE,GAClB,OAAOA,EAAIhC,KAAKG,WAAanC,I,iCAapBiE,EAAKvD,EAAeyC,EAAWC,GAAY,IACxCc,EAAuEf,EAA7ErD,KAD6C,cACgCqD,EAA7D7B,MAD6B,GACrBtB,EADqB,KAClBgE,EADkB,KACd7D,EAA8CgD,EAA9ChD,SAAUC,EAAoC+C,EAApC/C,YAAa+D,EAAuBhB,EAAvBgB,YAAajD,EAAUiC,EAAVjC,MACzElB,EAAIgC,KAAKoC,WAAWpE,GACpBgE,EAAIhC,KAAKqC,YAAYJ,EAAKD,GACtBG,IAAaH,GAAKZ,GAClBpD,EAAI,IAAGA,GAAKgC,KAAKH,OASrB,IARA,IAAM5B,EAAQD,EANqC,EA9LpC,SAAAF,GAIjB,IAHA,IACIwE,EADE3D,EAAe,GAGd2D,EAAQxE,EAAKwE,MAAM9E,IACxBM,EAAOA,EAAKQ,UAAU,EAAGgE,EAAMC,OAASD,EAAM,GAAKxE,EAAKQ,UAAUgE,EAAMC,MAAQD,EAAM,GAAGjD,QACzFV,EAAac,KAAK,CAAEH,MAAOgD,EAAMC,MAAOhD,IAAK+C,EAAMC,MAAQD,EAAM,GAAGjD,OAAS,EAAGG,KAAM8C,EAAM,KAG9F,MAAO,CAACxE,EAAMa,GA6Le6D,CAAWN,GARa,mBAQ9CpE,EAR8C,KAQxCa,EARwC,KAU/CC,EAAaK,IACbJ,GAAYI,IACZwD,EAAOT,EAEF5C,EAAI,EAAGA,EAAItB,EAAKuB,OAAQD,IAE/B,GAAIpB,EAAI,GAAMA,GAAKgC,KAAKH,QAAU1B,EAChCH,SAIF,GAAIH,EAAWC,EAAMsB,EAAGpB,EAAGC,EAAO+B,KAAKH,MAAO1B,EAAUC,GACtDJ,EAAIC,EACJ+D,IACApD,EAAaH,EAAUC,EAAeU,EAAGT,EAAcC,EAAYC,EAAUK,QAI/E,GAAIlB,IAAMC,GAAqB,MAAZH,EAAKsB,GAAxB,CAEIM,EAAcN,EAAGT,KAAeC,EAAaH,EAAUC,GAAgB,EAAG,KAAME,EAAYC,EAAUK,IAE1G,IAAMwD,EAAS1C,KAAK2C,iBAAiB3E,EAAGgE,GACxCC,EAAIS,GAAU5E,EAAKsB,GACnBR,EAAa+B,KAAKiC,IAAIhE,EAAY8D,GAClC7D,EAAW8B,KAAKC,IAAI/B,EAAU6D,GAC9BD,EAAO9B,KAAKC,IAAI6B,EAAMT,GACtBhE,IAEI2B,EAAYP,EAAGT,KAAeC,EAAaH,EAAUC,EAAeU,EAAGT,EAAcC,EAAYC,EAAUK,IAOjH,OAJAT,EAAUC,GAAgB,EAAG,KAAME,EAAYC,EAAUK,GAE3B,OAA1BpB,EAAKA,EAAKuB,OAAS,KAAa4C,EAAIjC,KAAK2C,iBAAiB3E,EAAGgE,EAAI,IAAM,MAEpES,I,qCAIMR,EAAKvD,EAAeyC,EAAWC,GAAY,IAClDtD,EAAmDqD,EAAnDrD,KADiD,cACEqD,EAA7C7B,MAD2C,GACnCtB,EADmC,KAChCgE,EADgC,KAC5BnC,EAA8BsB,EAA9BtB,MAAOsC,EAAuBhB,EAAvBgB,YAAajD,EAAUiC,EAAVjC,MAC/ClB,EAAIgC,KAAKoC,WAAWpE,GACpBgE,EAAIhC,KAAKqC,YAAYJ,EAAKD,GACtBG,IAAaH,GAAKZ,GAClBpD,EAAI,IAAGA,GAAKgC,KAAKH,OAOrB,IALA,IAAIjB,GAAcK,IACdJ,GAAYI,IACZwD,EAAO,EACPI,GAAgB,EAEXzD,EAAI,EAAGA,EAAItB,EAAKuB,OAAQD,IAC/B,KAAIpB,EAAKoB,EAAIS,EAAS,GAAK7B,EAAKoB,EAAIS,GAAUG,KAAKH,OAAnD,CACA,IAAMiD,EAAK1D,EAAIS,EACTkD,EAAKpC,KAAKqC,MAAM5D,EAAIS,GACpB6C,EAAS1C,KAAK2C,iBAAiB3E,EAAI8E,EAAId,EAAIe,GACjDd,EAAIS,GAAU5E,EAAKsB,GACnBqD,EAAO9B,KAAKC,IAAI6B,EAAMT,EAAIe,GAEtBL,EAAS7D,EAAW,IACtBJ,EAAUC,GAAgB,EAAG,KAAME,EAAYC,EAAUK,GAAQ2D,GAC7D7D,SAASJ,IAAeI,SAASH,IAAaK,GAASA,EAAM+D,UAASJ,GAAgB,GAC1FjE,EAAa8D,GAEf7D,EAAW6D,EAKb,OAFAjE,EAAUC,GAAgB,EAAG,KAAME,EAAYC,EAAUK,GAAQ2D,GAE1DJ,I,iCAGER,EAAKvD,EAAeyC,GAAY,IACjC7B,EAAe6B,EAAf7B,MAAOC,EAAQ4B,EAAR5B,IACf,GAAID,EAAM,KAAOC,EAAI,IAAMD,EAAM,KAAOC,EAAI,GAAI,CAC9C,IAAMmD,EAAS1C,KAAK2C,iBAAiBrD,EAAM,GAAIA,EAAM,IACrD2C,EAAIS,GAAU,OACdhE,EAAce,KAAK,CAAEH,MAAOoD,EAAQnD,IAAKmD,EAAQxD,MAAO,CAAE,eAAe,UACpE,GAAII,EAAM,KAAOC,EAAI,GAG1B,IAFA,IAAM2D,EAAclD,KAAKqC,YAAYJ,EAAK3C,EAAM,IAC1C6D,EAAYnD,KAAKqC,YAAYJ,EAAK1C,EAAI,IACnCH,EAAI8D,EAAa9D,GAAK+D,EAAW/D,IAAK,CAE7C6C,EADejC,KAAK2C,iBAAiB3C,KAAKoC,WAAW9C,EAAM,IAAKF,IAClD,SAEX,GAAIE,EAAM,KAAOC,EAAI,GAAI,CAK9B,IAJA,IAAM6D,EAAapD,KAAKoC,WAAW9C,EAAM,IACnC+D,EAAWrD,KAAKoC,WAAW7C,EAAI,IAC/B+D,EAAWtD,KAAK2C,iBAAiBS,EAAYpD,KAAKqC,YAAYJ,EAAK3C,EAAM,KACzEiE,EAASvD,KAAK2C,iBAAiBU,EAAUrD,KAAKqC,YAAYJ,EAAK3C,EAAM,KAClEF,EAAIgE,EAAYhE,GAAKiE,EAAUjE,IAAK,CAE3C6C,EADejC,KAAK2C,iBAAiBvD,EAAGY,KAAKqC,YAAYJ,EAAK3C,EAAM,MACtD,SAEhBZ,EAAce,KAAK,CAAEH,MAAOgE,EAAU/D,IAAKgE,EAAQrE,MAAO,CAAC,eAAe,Q,iCAInEsE,GACT,MAAsB,kBAARA,EAAmBA,EAAM7C,KAAKqC,MAAMS,WAAWD,GAAOxD,KAAKH,MAAQ,O,kCAGvEoB,EAAOuC,GACjB,GAAmB,kBAARA,EAAkB,OAAOA,EACpC,IAAM1D,EAASa,KAAKC,IAAIZ,KAAKF,OAAQa,KAAK+C,KAAKzC,EAAM5B,OAASW,KAAKH,QACnE,OAAO4D,WAAWD,GAAO1D,EAAS,M,oCAGtBD,EAAOC,GACnBE,KAAKH,MAAQA,EACbG,KAAKG,WAAaH,KAAKH,MAAQ,EAC/BG,KAAKF,OAASA,M,aC/SH6D,EAfI,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUX,EAAmC,EAAnCA,QAASY,EAA0B,EAA1BA,UAAcC,EAAY,kDACjE,OACE,wCACED,UAAS,UAAKA,EAAL,cACTE,KAAK,SACL5E,SAAS,IACT8D,QAASA,EACTe,UAAW,SAAAC,IAZI,SAAAA,GACnB,OAAIA,EAAIC,KAA0B,UAAbD,EAAIC,MAAiC,UAAbD,EAAIC,KAC5B,KAAdD,EAAIE,OAA8B,KAAdF,EAAIE,OAUHC,CAAaH,KAAQA,EAAII,iBAAkBJ,EAAIK,kBAAmBrB,EAAQgB,MAC9FH,GAEHF,ICRQ,WAAC9B,EAAK5B,EAAcqE,GAIjC,IAHA,IAAIC,EAAW,GAEXC,GAAW,EACNrF,EAAI,EAAGA,EAAIc,EAAab,OAAQD,IAAK,CAAC,IAAD,EAChBc,EAAad,GAAnCE,EADsC,EACtCA,MAAOC,EAD+B,EAC/BA,IAAKL,EAD0B,EAC1BA,OAClBI,EAAQqB,KAAKC,IAAItB,EAAOmF,EAAU,IACtBA,EAAU,GAAGD,EAAS/E,KAAK,0BAAMiF,IAAG,oBAAetF,IAAM0C,EAAIxD,UAAUmG,EAAU,EAAGnF,KAE5FJ,GAASA,EAAMM,KACjBgF,EAAS/E,KAAK,qCAAGiF,IAAG,YAAOtF,IAASF,GAAQ4C,EAAIxD,UAAUgB,EAAOC,EAAM,KAC9DL,GAASA,EAAM+D,QACxBuB,EAAS/E,KAAK,kBAAC,EAAD,eAAYiF,IAAG,qBAAgBtF,GAAKuF,MAAO,CAACJ,aAAerF,GAAQ4C,EAAIxD,UAAUgB,EAAOC,EAAM,KACnGL,EACTsF,EAAS/E,KAAK,wCAAMiF,IAAG,eAAUtF,IAASF,GAAQ4C,EAAIxD,UAAUgB,EAAOC,EAAM,KAE7EiF,EAAS/E,KAAK,0BAAMiF,IAAG,eAAUtF,IAAM0C,EAAIxD,UAAUgB,EAAOC,EAAM,KAEpEkF,EAAUlF,EAGZ,OADIkF,EAAU3C,EAAIzC,QAAQmF,EAAS/E,KAAK,0BAAMiF,IAAI,aAAa5C,EAAIxD,UAAUmG,EAAU,EAAG3C,EAAIzC,UACvFmF,GC5BHI,EAAiB,CAAEC,EAAcC,GAKjCC,KAAmBC,UAAUC,gBAAkBD,UAAUC,eAAiB,GCyGjEC,E,YAnGb,WAAYhG,GAAQ,IAAD,8BACjB,4CAAMA,KAEDiG,cAAgBC,IAAMC,YAC3B,EAAKC,cAAgBF,IAAMC,YAE3B,EAAKE,iBAAmB,EACxB,EAAKC,kBAAoB,EACzB,EAAKC,gBAAkB,GACvB,EAAKC,iBAAmB,GACxB,EAAKC,oBAAsB,EAC3B,EAAKC,cAAgB,KACrB,EAAK3F,QAAU,GACf,EAAK4F,eAAiB,IAAIjG,EAAe,EAAK6F,gBAAiB,EAAKC,iBAAkBxG,EAAMa,MAb3E,E,iFAmBbC,KAAKd,MAAM4G,aACb9F,KAAK4F,cAAgB5F,KAAK+F,OAAOC,KAAKhG,MACtCiG,OAAOC,iBAAiB,SAAUlG,KAAK4F,gBAGzC,IAAMO,EAAanG,KAAKmF,cAAciB,QAAQC,wBAAwBvG,OAEhE6F,EAAsB,EAAIQ,EADPnG,KAAKsF,cAAcc,QAAQC,wBAAwBvG,OAG5EE,KAAKuF,gBAAkBvF,KAAKmF,cAAciB,QAAQC,wBAAwBxG,MAC1EG,KAAKwF,iBAAmBW,EAAaR,EACrC3F,KAAK2F,oBAAsBA,EAI3B3F,KAAK+F,SACD/F,KAAKd,MAAMoH,eAAetG,KAAKd,MAAMoH,cAActG,KAAKuF,gBAAiBvF,KAAKwF,iBAAkBxF,KAAK2F,uB,6CAKrG3F,KAAK4F,gBACPK,OAAOM,oBAAoB,SAAUvG,KAAK4F,eAC1C5F,KAAK4F,cAAgB,Q,+BAMvB5F,KAAKyF,gBAAkB9E,KAAKqC,OAAOhD,KAAKd,MAAMsH,cAtDzC7F,KAAKiC,IAAIqD,OAAOQ,WDHF,OCyD+DzG,KAAKuF,iBACvFvF,KAAK0F,iBAAmB/E,KAAKqC,QAAQhD,KAAKd,MAAMwH,eAAiBT,OAAOU,aAAe3G,KAAK2F,qBAAuB3F,KAAKwF,kBACxHxF,KAAK6F,eAAee,cAAc5G,KAAKyF,gBAAiBzF,KAAK0F,kBAC7D1F,KAAK6G,gB,mCAGM9G,GAGX,IADA,IAAMkC,EAAM,GACH7C,EAAI,EAAGA,EAAIW,EAAKV,OAAQD,IACR,oBAAZW,EAAKX,GACd6C,EAAIxC,KAAKM,EAAKX,IAEd6C,EAAIxC,KAAJ,MAAAwC,EAAG,YAASlC,EAAKX,GAAGY,KAAKyF,gBAAiBzF,KAAK0F,oBAGnD,OAAOzD,I,6CAKe,IAAD,EACwCjC,KAAK6F,eAAe9D,mBAAmB/B,KAAK8G,aAAa9G,KAAKd,MAAM6H,SAAU,IAAhIzG,EADU,EACfwB,IAAiCkF,EADlB,EACI9G,aACrB+G,EAAsBjH,KAAK6F,eAAeqB,mBAAmBlH,KAAKC,QAASK,EAAcN,KAAKd,MAAMiI,wBACxG,OAAOC,EAAeH,EAAqBD,EAAmBhH,KAAKd,MAAMqF,Y,+BAMzE,IAAIC,EAEJ,GAAIxE,KAAKd,MAAM6H,QACbvC,EAAWxE,KAAKqH,4BACX,GAAIrH,KAAKuF,gBAAkB,EAAG,CACnC,IAAMxF,EAAOC,KAAK8G,aAAa9G,KAAKd,MAAMa,MAC1CC,KAAK6F,eAAeyB,QAAQvH,GAFO,MAGPC,KAAK6F,eAAe0B,SAAzCzF,EAH4B,EAG5BA,IAAK5B,EAHuB,EAGvBA,aACZF,KAAKC,QAAU6B,EACf0C,EAAW4C,EAAetF,EAAK5B,EAAcF,KAAKd,MAAMqF,UAG1D,OACE,yBAAKV,UAAS,6BAAwB7D,KAAKd,MAAM2E,YAC9CW,GAAY,kBAAC,IAAMgD,SAAP,KAAgB,0BAAMC,IAAKzH,KAAKmF,eAAgB,KAAW,6BAAM,0BAAMsC,IAAKzH,KAAKsF,eAAgB,SAC7GtF,KAAKd,MAAMwI,2BAA6B1H,KAAKd,MAAMwI,0BAA0B1H,KAAKuF,gBAAiBvF,KAAKwF,iBAAkBxF,KAAK2F,0B,GA9FzGP,IAAMuC,WCNxBC,EAAU,CAFN,+1CACA,62C,cCFGhD,E,GAAbiD,E,KAAMC,E,mBCFOlD,E,GAAbiD,E,KAAMC,E,aCDPC,EAAgB,CACpB,IACA,IACA,IACA,SACA,SACA,OACA,IACA,KAwKaC,E,WApKb,aAA+E,IAAnEC,EAAkE,uDAAjD,EAAGC,EAA8C,uDAA5B,EAAGvC,EAAyB,uDAAH,EAAG,oBAC5E3F,KAAKmI,UAAYF,EACjBjI,KAAKmG,WAAa+B,EAClBlI,KAAK2F,oBAAsBA,E,8DAGXyC,EAAGC,EAAGC,GACtBtI,KAAKmI,UAAYC,EACjBpI,KAAKmG,WAAakC,EAClBrI,KAAK2F,oBAAsB2C,I,qCAGdC,EAASC,EAAQ3I,EAAOC,EAAQ2I,EAAQC,GAKrD,IAJA,IACMC,GAAmBD,EAAc,GAAK,EACtCE,GAFeH,EAAOpJ,OAASqJ,EAEI,GAAK,EAErC1G,EAAI,EAAGA,EAAIlC,EAAQkC,IAC1B,IAAK,IAAIhE,EAAI,EAAGA,EAAI6B,EAAO7B,IAAK,CAI9B,IAHA,IAAI6K,EAAO,EACPC,EAAO,EACPC,EAAO,EACFhG,GAAM6F,EAAkB7F,GAAM6F,EAAkB7F,IACvD,IAAK,IAAID,GAAM6F,EAAiB7F,GAAM6F,EAAiB7F,IAAM,CAC3D,IAAMkG,EAAOrI,KAAKiC,IAAI/C,EAAQ,EAAGc,KAAKC,IAAI,EAAG5C,EAAI8E,IAE3CmG,EAASpJ,EADFc,KAAKiC,IAAI9C,EAAS,EAAGa,KAAKC,IAAI,EAAGoB,EAAIe,IACpBiG,EAExBE,EAAIV,EAAO,EAAIS,GACfE,EAAIX,EAAO,EAAIS,EAAS,GACxBtL,EAAI6K,EAAO,EAAIS,EAAS,GAExBG,GAAarG,EAAK6F,GAAoBF,GAAe5F,EAAK6F,GAChEE,GAAQK,EAAIT,EAAOW,GACnBN,GAAQK,EAAIV,EAAOW,GACnBL,GAAQpL,EAAI8K,EAAOW,GAGvB,IAAMC,EAAYxJ,EAAQmC,EAAIhE,EAC9BuK,EAAQ,EAAIc,GAAaR,EACzBN,EAAQ,EAAIc,EAAY,GAAKP,EAC7BP,EAAQ,EAAIc,EAAY,GAAKN,K,mCAKtBP,EAAQ3I,EAAOC,EAAQwJ,GAClC,IAAK,IAAItH,EAAI,EAAGA,EAAIlC,EAAQkC,IAC1B,IAAK,IAAIhE,EAAI,EAAGA,EAAI6B,EAAO7B,IAAK,CAC9B,IAAMuL,EAAM,GAAK1J,EAAQmC,EAAIhE,GAK7BsL,EAJUd,EAAOe,GACPf,EAAOe,EAAM,GACbf,EAAOe,EAAM,GACbf,EAAOe,EAAM,GACRA,M,6BAKdhB,EAASC,EAAQ3I,EAAOC,GAC7BE,KAAKwJ,aAAahB,EAAQ3I,EAAOC,GAAQ,SAACoJ,EAAGC,EAAGxL,EAAGD,EAAG6L,GACpDhB,EAAQgB,GAAO,IAAMhB,EAAQgB,GAC7BhB,EAAQgB,EAAM,GAAK,IAAMhB,EAAQgB,EAAM,GACvChB,EAAQgB,EAAM,GAAK,IAAMhB,EAAQgB,EAAM,Q,gCAIjChB,EAASkB,GACjBzJ,KAAKwJ,aAAaC,EAAU1J,KAAM0J,EAAU5J,MAAO4J,EAAU3J,QAAQ,SAACoJ,EAAGC,EAAGxL,EAAGD,EAAG6L,GAChF,IAAMG,EAAY,MAASR,EAAI,MAASC,EAAI,MAASxL,EACrD4K,EAAQgB,GAAOG,EACfnB,EAAQgB,EAAM,GAAKG,EACnBnB,EAAQgB,EAAM,GAAKG,EACnBnB,EAAQgB,EAAM,GAAK7L,O,oCAIT6K,EAASkB,GACrB,IAAME,EAAiB,IAAIpJ,MAAMkJ,EAAU1J,KAAKV,QAChDW,KAAK4J,UAAUD,EAAgBF,GAE/B,IAUMI,EAAiB,IAAItJ,MAAMkJ,EAAU1J,KAAKV,QAChDW,KAAK8J,eAAeD,EAAgBF,EAAgBF,EAAU5J,MAAO4J,EAAU3J,OAX5D,EAChB,EAAG,EAAG,GACN,EAAG,EAAG,GACN,EAAG,EAAG,GAQ0F,GAEnG,IAUMiK,EAAgB,IAAIxJ,MAAMkJ,EAAU1J,KAAKV,QAC/CW,KAAK8J,eAAeC,EAAeJ,EAAgBF,EAAU5J,MAAO4J,EAAU3J,OAX5D,EACf,GAAI,GAAI,EACT,EAAG,EAAG,EACN,EAAG,EAAG,GAQyF,GAEjG,IAAK,IAAIV,EAAI,EAAGA,EAAIyK,EAAexK,OAAQD,GAAK,EAAG,CACjD,IAAM4K,EAAiBrJ,KAAKsJ,KAAKtJ,KAAKuJ,IAAIL,EAAezK,GAAI,GAAKuB,KAAKuJ,IAAIH,EAAc3K,GAAI,IAC7FmJ,EAAQnJ,GAAK4K,EACbzB,EAAQnJ,EAAI,GAAK4K,EACjBzB,EAAQnJ,EAAI,GAAK4K,EACjBzB,EAAQnJ,EAAI,GAAKqK,EAAU1J,KAAKX,EAAI,GAGtCY,KAAKmK,OAAO5B,EAASA,EAASkB,EAAU5J,MAAO4J,EAAU3J,U,oCAG7CsK,GACZ,IAAK,IAAIhL,EAAI,EAAGA,EAAI2I,EAAc1I,OAAQD,IAAK,CAC7C,IAAMiL,GAAgBjL,EAAI,GAAK2I,EAAc1I,OAE7C,GAAI+K,EADWzJ,KAAKuJ,IAAIG,EAAc,GACpB,OAAOtC,EAAc3I,GAEzC,OAAO2I,EAAcA,EAAc1I,OAAS,K,8BAGtCoK,EAAWa,GASjB,IARA,IAAMC,EAAcd,EAAU5J,MAAQ4J,EAAU3J,OAC1C0K,EAAqB7J,KAAK+C,KAAM4G,EAAoBC,GAAgBvK,KAAKmG,WAAanG,KAAKmI,YAC3FsC,EAAMhB,EAAU1J,KAChB2K,EAAQ,GACRzI,EAAM,GACN0I,EAAsBlB,EAAU5J,MAAQyK,EACxCM,EAAuBnB,EAAU3J,OAAS0K,EAEvCxI,EAAI,EAAGA,EAAIwI,EAAoBxI,IACtC,IAAK,IAAIhE,EAAI,EAAGA,EAAIsM,EAAmBtM,IAAK,CAK1C,IAHA,IAAM6M,EAAW7M,EAAI2M,EACfG,EAAW9I,EAAI4I,EACjBG,EAAM,EACDC,EAAKF,EAAUE,EAAKF,EAAWF,EAAsBI,IAE5D,IADA,IAAMC,EAAUtK,KAAKI,MAAMiK,GAClBE,EAAKL,EAAUK,EAAKL,EAAWF,EAAqBO,IAAM,CACjE,IAAMC,EAAUxK,KAAKI,MAAMmK,GACrBE,EAAaH,EAAUxB,EAAU5J,MAAQsL,EAC/CT,EAAMK,KAASN,EAAI,EAAIW,GACvBV,EAAMK,KAASN,EAAI,EAAIW,EAAa,GACpCV,EAAMK,KAASN,EAAI,EAAIW,EAAa,GAGxCV,EAAMrL,OAAS0L,EAEf,IACMX,EADcM,EAAMW,QAAO,SAACC,EAAKlB,GAAN,OAAckB,EAAMlB,IAAK,IAC/B,IAAMM,EAAMrL,QACvC4C,EAAIxC,KAAKO,KAAKuL,cAAcnB,IAIhC,OAAOnI,M,KCjDIuJ,E,YApHb,WAAYtM,GAAQ,IAAD,8BACjB,4CAAMA,KAEDuM,MAAQ,CACXlG,gBAAiB,EACjBC,iBAAkB,EAClBG,oBAAqB,EACrB+F,QAAQ,GAGV,EAAKC,eAAiB,IAAI3D,EAC1B,EAAK5H,SAAW,KAChB,EAAKwL,YAAc,GAEnB,EAAKC,SAAWzG,IAAMC,YACtB,EAAKyG,UAAY1G,IAAMC,YAEvB,EAAK0G,UAAY,KACjB,EAAKC,YAAc,GAEnB,EAAKC,YAAc,EAAKA,YAAYjG,KAAjB,gBApBF,E,iFAuBE,IAAD,OAClBhG,KAAKI,SAAW8L,aAAY,WACtB,EAAKC,gBACP,EAAKtF,gBAEN,IAAO7G,KAAK4L,e,6CAIX5L,KAAKI,UAAUgM,cAAcpM,KAAKI,UACtCJ,KAAKI,SAAW,O,+CAIhB,MAAO,CACL,CAAEiB,KAAM,WAAYtB,KAAM,CAAET,MAAO,CAAC,EAAE,GAAIO,MAAOG,KAAKqM,sBAAuBvO,KAAO,IAAIyC,MAAMP,KAAKqM,sBAAwBrM,KAAKsM,uBAAyB,GAAI9L,KAAK,KAAMtB,MAAO,CAAE,eAAe,Q,6CAOlM,IAAMqN,EAAQvM,KAAK6L,SAASzF,QACtBoG,EAASxM,KAAK8L,UAAU1F,QACxBqG,EAAUD,EAAOE,WAAW,MAElCF,EAAO3M,MAAQ,IACf2M,EAAO1M,OAAS0M,EAAO3M,MAAQ0M,EAAMI,YAAcJ,EAAMK,WACzDH,EAAQI,UAAUN,EAAO,EAAG,EAAGC,EAAO3M,MAAO2M,EAAO1M,QAEpD,IAAM2J,EAAYgD,EAAQK,aAAa,EAAG,EAAGN,EAAO3M,MAAO2M,EAAO1M,SACpC,IAA1BE,KAAKd,MAAM6N,YAAqB/M,KAAK2L,eAAeqB,cAAcvD,EAAU1J,KAAM0J,GACtFgD,EAAQQ,aAAaxD,EAAW,EAAG,GAEnC,IAAMyD,EAAkBlN,KAAK2L,eAAewB,QAAQ1D,EAAWzJ,KAAKqM,uBACpE,MAAO,CACL,CAAEhL,KAAM,WAAYtB,KAAM,CAAET,MAAO,CAAC,EAAE,GAAIO,MAAOG,KAAKqM,sBAAuBvO,KAAMoP,EAAgB1M,KAAK,IAAKtB,MAAO,CAAE,eAAe,Q,4CAKvI,OAAOyB,KAAKqC,MAAMhD,KAAKd,MAAMkO,UAAYpN,KAAKyL,MAAMlG,mB,6CAIpD,OAAO5E,KAAKqC,OAAOhD,KAAKd,MAAMmO,WAAarN,KAAKyL,MAAM9F,qBAAuB3F,KAAKyL,MAAMjG,oB,kCAG9ED,EAAiBC,EAAkBG,GAC7C3F,KAAK2L,eAAe2B,kBAAkB/H,EAAiBC,EAAkBG,GACzE3F,KAAKuN,SAAS,CAAEhI,kBAAiBC,mBAAkBG,0B,qCAInD,OAAO,I,+BAGC,IACJnB,EADG,OAiBP,OAZIxE,KAAKd,MAAMsO,IAAMxN,KAAK6L,SAASzF,SAAWpG,KAAK6L,SAASzF,QAAQuG,aAC9D3M,KAAKyL,MAAMC,OACR1L,KAAK6L,SAASzF,QAAQsF,QAAQ1L,KAAK6L,SAASzF,QAAQqH,QAChDzN,KAAK6L,SAASzF,QAAQsF,QAC/B1L,KAAK6L,SAASzF,QAAQsH,OAExBlJ,EAAWxE,KAAK2N,yBAEZ3N,KAAK6L,SAASzF,UAAYpG,KAAK6L,SAASzF,QAAQsF,QAAQ1L,KAAK6L,SAASzF,QAAQqH,QAClFjJ,EAAWxE,KAAK4N,0BAIhB,kBAAC,IAAMpG,SAAP,KACE,0BAAMvE,QAAS,kBAAM,EAAKsK,SAAS,CAAC7B,QAAS,EAAKD,MAAMC,WACtD,kBAAC,EAAD,CACE7H,UAAU,YACV9D,KAAMyE,EACNgC,aAAcxG,KAAKd,MAAMkO,UACzB1G,cAAe1G,KAAKd,MAAMmO,WAC1B/G,cAAetG,KAAKiM,eAKxB,yBAAKvH,IAAI,6BAA6Bb,UAAU,8BAA6B,2BAAOgK,UAAQ,EAAChO,MAAM,QAAQ4H,IAAKzH,KAAK6L,SAAUiC,IAAK9N,KAAKd,MAAM4O,MAAO,4BAAQrG,IAAKzH,KAAK8L,kB,GA/G/J1G,IAAMuC,W,cCFW/C,E,GAA3BmJ,E,KAAaC,E,KAoCdC,EAAW,CACf,CAAEH,IAAK,gCAAiCI,MAAO,+BAAgCC,IAAK,mFACpF,CAAEL,IAAK,oDAAqDI,MAAO,sBAAuBC,IAAK,mFAC/F,CAAEL,IAAK,uBAAwBI,MAAO,oCAAqCC,IAAK,mFAChF,CAAEL,IAAK,uBAAwBI,MAAO,sCAAuCC,IAAK,mFAClF,CAAEL,IAAK,qBAAsBI,MAAO,iCAAkCC,IAAK,mEAC3E,CAAEL,IAAK,6BAA8BI,MAAO,oCAAqCC,IAAK,oDAoBlFC,EAASL,EAAc,EACvBM,EAAQL,EAAa,EAerBM,EANkB,GAKH,YACwCjP,OAcvDkP,EApBkB,GAmBJ,YACiClP,O,cC/FjCuF,E,GAAbiD,E,KAAMC,E,KAuMP0G,EAAoB7N,KAAKqC,MAAM,GCtM/ByL,EAAkB,qOTED,KSFC,mOAQrB1J,EAAqB,2DAAL,GARK,gzB,eA8BJH,E,GAAbiD,G,MAAMC,G,MC1BE,IACb4G,KPFa,WACb,MAAO,CACLC,iBAAkB,CAAE,SAAClJ,EAAiBC,GACpC,IAAMkJ,EAAsBnJ,EAAkB,IAAMoC,EAC9CgH,EAAUD,EAAsB9G,EAAM,GAAKA,EAAM,GACjDgH,EAAaD,EAAU,GAE7B,MAAO,CAEL,CAAExN,KAAM,WAAYtB,KAAM,CAAET,MAAO,CAACuI,EAAKC,GAAMjI,MAAO+O,EAAsB,IAAM,GAAI9Q,KAHvE8Q,EDwBN,4hFA2BI,ssCChDyF1P,MAAO,CAAE2E,UAAW,cAAe,aAAc,iCAAkCZ,QAAS,kBAAMgD,OAAO8I,SAAW,4BAE1N,CAAE1N,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAMgH,GAAU/Q,KAAM,aACtD,CAAEuD,KAAM,WAAYtB,KAAM,CAAET,MAAO,CAACuI,EAAKgH,EAAU,GAAIhP,MAAO,GAAI/B,KAAM8J,EAAQjH,KAAKqC,MAAsB,EAAhBrC,KAAKqO,WAAgB9P,MAAO,CAAE,eAAe,KAExI,CAAEmC,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAMiH,GAAahR,KAAM,oFACzD,CAAEuD,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAO,EAAGiH,EAAa,GAAIhR,KAAM,eAAgBoB,MAAO,CAAEM,KAAM,mCAChG,CAAE6B,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAO,GAAIiH,EAAa,GAAIhR,KAAM,WAAYoB,MAAO,CAAEM,KAAM,qCAC7F,CAAE6B,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAO,GAAIiH,EAAa,GAAIhR,KAAM,cAAYoB,MAAO,CAAEM,KAAM,mCAC7F,CAAE6B,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAMiH,EAAa,GAAIhR,KAAM,YOfnEmR,SNFa,WACb,MAAO,CACLN,iBAAkB,CAChB,CAAEtN,KAAM,WAAYtB,KAAM,CAAET,MAAO,CAACuI,EAAKC,GAAMjI,MAAO,GAAI/B,KAN/C,QMMfoR,GHyFa,YAA+H,IAA5HC,EAA2H,EAA3HA,KAAMC,EAAqH,EAArHA,QAASC,EAA4G,EAA5GA,UAAWC,EAAiG,EAAjGA,aAAcC,EAAmF,EAAnFA,aAAcC,EAAqE,EAArEA,gBAAiBC,EAAoD,EAApDA,gBAAiBC,EAAmC,EAAnCA,mBAAoBnL,EAAe,EAAfA,SACtHoL,EAAoBR,EAAD,mBAAyBlB,EAASoB,GAAWnB,MAA7C,WAAQ,GAEjC,MAAO,CACLS,iBAAkB,CAEhB,CAAEtN,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAAOJ,GAAalQ,KAAM,6DAC1D,CAAEuD,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAAOJ,EAAa,GAAIlQ,KAAM,uDAG9D,CAAEuD,KAAM,WAAYtB,KAAM,CAAET,MAAO,CAAC8O,EAAOC,GAAQxO,MAxCzC,GAwCyD/B,KArG9D,+pFAwGL,CAAEuD,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAnCd,GAmCwCC,EAlCvC,IAkCkEvQ,KAAM,MAAOoB,MAAO,CAAE2E,UAAU,aAAD,OAAesL,EAAO,GAAK,YAAclM,QAAS,kBAAMmM,GAAQ,OACpL,CAAE/N,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAASG,EAAgBF,EAnCtC,IAmCiEvQ,KAAM,KAAMoB,MAAO,CAAE2E,UAAU,aAAD,OAAesL,EAAO,WAAa,IAAMlM,QAAS,kBAAMmM,GAAQ,OAGlL,CAAE/N,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAvCd,GAuCwCC,EAnCrC,IAmCkEvQ,KAAM,OAAQoB,MAAO,CAAE2E,UAAW,YAAaZ,QAAS,kBAAMqM,GAAcD,EAAY,EAAIpB,EAAS5O,QAAU4O,EAAS5O,YAC/M,CAAEgC,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAASE,EAAuBD,EApC3C,IAoCwEvQ,KAAM,KAAMoB,MAAO,CAAE2E,UAAW,YAAaZ,QAAS,kBAAMqM,GAAcD,EAAY,GAAKpB,EAAS5O,YAGjM,CAAEgC,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EA3Cd,GA2CwCC,EAlCpC,IAkCkEvQ,KAAM,MAAOoB,MAAO,CAAE2E,UAAU,aAAD,OAAe0L,EAAe,GAAK,YAActM,QAAS,kBAAMuM,GAAgB,OACvM,CAAEnO,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAASG,EAAgBF,EAnCnC,IAmCiEvQ,KAAM,KAAMoB,MAAO,CAAE2E,UAAU,aAAD,OAAe0L,EAAe,WAAa,IAAMtM,QAAS,kBAAMuM,GAAgB,OAGrM,CAAEnO,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAnCb,GAmCyC,EAAGC,EAlC9C,EAkCuE,GAAIvQ,KAAM,IAAKoB,MAAO,CAAE2E,UAAU,aAAD,OAAmC,IAApB4L,EAAwB,WAAa,IAAMxM,QAAS,kBAAMyM,EAAmB,OACrN,CAAErO,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EApCb,GAoCyC,GAAIC,EAnC/C,EAmCwE,GAAIvQ,KAAM,IAAKoB,MAAO,CAAE2E,UAAU,aAAD,OAAmC,IAApB4L,EAAwB,WAAa,IAAMxM,QAAS,kBAAMyM,EAAmB,OACtN,CAAErO,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EArCb,GAqCyC,GAAIC,EApC/C,EAoCwE,GAAIvQ,KAAM,IAAKoB,MAAO,CAAE2E,UAAU,aAAD,OAAmC,IAApB4L,EAAwB,WAAa,IAAMxM,QAAS,kBAAMyM,EAAmB,OACtN,CAAErO,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAtCb,GAsCyC,EAAGC,EArC9C,EAqCuE,GAAIvQ,KAAM,IAAKoB,MAAO,CAAE2E,UAAU,aAAD,OAAmC,IAApB4L,EAAwB,WAAa,IAAMxM,QAAS,kBAAMyM,EAAmB,OACrN,CAAErO,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAvCb,GAuCyC,EAAGC,EAtC9C,EAsCuE,GAAIvQ,KAAM,IAAKoB,MAAO,CAAE2E,UAAU,aAAD,OAAmC,IAApB4L,EAAwB,WAAa,IAAMxM,QAAS,kBAAMyM,EAAmB,OACrN,CAAErO,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAxCb,GAwCyC,EAAGC,EAvC9C,EAuCuE,GAAIvQ,KAAM,IAAKoB,MAAO,CAAE2E,UAAU,aAAD,OAAmC,IAApB4L,EAAwB,WAAa,IAAMxM,QAAS,kBAAMyM,EAAmB,OAGrNP,GAAQ,CAAE9N,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAvCrB,EAuCgDC,EAtCjD,IAsC2EvQ,KAAM6R,IACnGR,GAAQ,CAAE9N,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAxCrB,EAwCiDuB,EAAiBtQ,OAAS,EAAGgP,EAvC/E,IAuCyGvQ,KAAM,OAAQoB,MAAO,CAAEM,KAAMyO,EAASoB,GAAWlB,OAG5K,CAAE9M,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC8O,EAAQC,EAlE7B,GAkEgD,GAAIlQ,SAnErD,GAmEwEL,KApFjE,+LAsFnB8R,sCAAuC,SAACrK,EAAiBC,EAAkBG,GACzE,IAAMkC,GAAQuG,EAlEO,GAkEwB7I,EACvCuC,GAAOuG,EAlEO,GAkEsB7I,EAAoBG,EAAsB,EAC9E9F,EA/EQ,GA+Ec0F,EACtBzF,EA/ES,GA+Ee0F,EACxBqK,EAAatL,EAAWkL,EAI9B,MAAO,CACL,yBAAK/K,IAAI,eAAeC,MAAO,CAACkD,KAAK,GAAD,OAAIA,EAAJ,MAAcC,IAAI,GAAD,OAAIA,EAAJ,MAAajI,MAAM,GAAD,OAAIA,EAAJ,MAAeC,OAAO,GAAD,OAAIA,EAAJ,MAAgBgQ,SAAS,WAAYvL,SAAS,GAAD,OAAIsL,EAAJ,MAAoBE,WAAW,GAAD,OAAIF,EAAJ,QACrK,kBAAC,EAAD,CACEnL,IAAG,oBAAe+K,GAClBjC,GAAI2B,EACJpC,WAAYwC,EACZzB,IAAKG,EAASoB,GAAWvB,IACzBV,UAAWvN,EACXwN,WAAYvN,SGhJtBkQ,KFqNa,WACb,MAAO,CACLrB,iBAAkB,CAChB,CAAEtN,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAKC,GAAM3J,SAAU,GAAIC,YAAa,EAAGN,KA/N7D,oJAgOZ,CAAEuD,KAAM,WAAYtB,KAAM,CAAET,MAAO,CAACuI,EAAO2G,EAAkB,GAAIrM,aAAa,EAAMtC,MA9JjE,GA8J0F/B,KArL/F,ofAqLkHoB,MAAO,CAAE2E,UAAW,iBAAkB,eAAe,KACrL,CAAExC,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAK,GAAI1F,aAAa,EAAMhE,SAAU,GAAIC,YAAa,EAAGN,KA9HzE,gFA+HjB,CAAEuD,KAAM,WAAYtB,KAAM,CAAET,MAAO,CAACuI,EAAK,GAAI1F,aAAa,EAAMtC,MA9E1C,GA8EsE/B,KA7F3E,wnCA6FiGoB,MAAO,CAAE2E,UAAW,OAAQ,eAAe,KAC7J,CAAExC,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAK,GAAI1F,aAAa,EAAMhE,SAAU,GAAIC,YAAa,EAAGN,KA5B7E,iwBA6Bb,CAAEuD,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,EAAK,GAAI1F,aAAa,EAAMhE,SAAU,GAAIL,KAAM,UE5NpFmS,MDuBa,WACb,MAAO,CACLtB,iBAAkB,CAChB,CAAEtN,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,GAAKC,IAAM3J,SAAU,GAAIC,YAAa,EAAGN,KAAM2Q,IAC/E,CAAEpN,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,GAAO,EAAE,GAAI1F,aAAa,EAAMhE,SAAU,GAAIL,KAAM,mBAAoBoB,MAAO,CAAEM,KAAM,kDACvH,CAAE6B,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,GAAO,EAAE,GAAI1F,aAAa,EAAMhE,SAAU,GAAIL,KAAM,WAAYoB,MAAO,CAAEM,KAAM,4CAC/G,CAAE6B,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,GAAO,EAAE,GAAI1F,aAAa,EAAMhE,SAAU,GAAIL,KAAM,YAAaoB,MAAO,CAAEM,KAAM,gGAChH,CAAE6B,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuI,GAAK,GAAI1F,aAAa,EAAMhE,SAAU,GAAIL,KAAM,YEvChFoS,GAAQ,wBAMRC,GAAc,SAAClN,EAASmN,GAC5B,MAAO,CAAEvM,UAAW,YAAa,aAAa,eAAb,OAA6BuM,EAA7B,SAA8CnN,QAAS,kBAAMA,EAAQmN,MAGzF,YAACC,GACd,MAAO,CAEL,CAAEhP,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAACuF,EAAc,GAAI/G,KAAM,gBACxD,CAAEuD,KAAM,OAAQtB,KAAM,CAAET,MAAO,GAAG4Q,GAAM7Q,OAAS,GAAI,GAAIvB,KAAMoS,KAC/D,CAAE7O,KAAM,OAAQtB,KAAM,CAAET,MAAO,GAdlB,WAc8BD,OAAS,GAAI,GAAIvB,KAd/C,WAc+DoB,MAAO,CAAEM,KAAM,4DAS3F,CAAE6B,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC,KAAMwF,GAAmBhH,KAAM,OAAQoB,MAAOiR,GAAYE,EAAY,UACtG,CAAEhP,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC,MAAOwF,GAAmBhH,KAAM,OAAQoB,MAAOiR,GAAYE,EAAY,UACvG,CAAEhP,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC,MAAOwF,GAAmBhH,KAAM,QAASoB,MAAOiR,GAAYE,EAAY,YACvGtL,GAAiB,CAAE1D,KAAM,OAAQtB,KAAM,CAAET,MAAO,CAAC,MAAOwF,GAAmBhH,KAAM,KAAMoB,MAAOiR,GAAYE,EAAY,QAGvH,CAAEhP,KAAM,OAAQtB,KAAM,CAAET,MAAO,CXhClB,EWgC6BwF,GAAmBvF,IAAK,CAAC,OAAQuF,KAC3E,CAAEzD,KAAM,OAAQtB,KAAM,CAAET,MAAO,CXjClB,EACI,GWgCwCC,IAAK,CAAC,OXhC9C,OYaN+Q,GAdS,SAAC,GAAoE,IAAD,IAAjEC,uBAAiE,MAA/C,IAA+C,MAA1CC,sBAA0C,MAAzB,GAAyB,EAArBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACzEC,EAAiB,EACjBvQ,EAAW8L,aAAY,WACzByE,GAAkBH,EAElBC,EAAO9P,KAAKiC,IAAI,EAAG+N,EAAiBJ,IAEhCI,GAAkBJ,IACpBnE,cAAchM,GACdsQ,OAEDF,ICkEUI,GA7DE,WACf,IACIC,EADaC,cACOD,SAASvS,UAAU,GACtCyS,GAAmBC,eAAeH,KAAWA,EAAW,QAHxC,MAKSI,mBAASJ,GALlB,mBAKhBT,EALgB,KAKNc,EALM,OAMeD,mBAAS,MANxB,mBAMhBE,EANgB,KAMHC,EANG,OAOqCH,mBAAS,GAP9C,mBAOhB9J,EAPgB,KAOQkK,EAPR,OAQCJ,oBAAS,GARV,mBAQhB9B,EARgB,KAQVC,EARU,OASW6B,mBAAS,GATpB,mBAShB5B,EATgB,KASLC,EATK,OAUiB2B,oBAAS,GAV1B,mBAUhB1B,EAVgB,KAUFC,EAVE,OAWuByB,mBAAS,GAXhC,mBAajBK,EAAoB,CACtBpC,GAAI,CACFC,OACAC,UACAC,YACAC,eACAC,eACAC,kBACAC,gBArBiB,KAsBjBC,mBAtBiB,KAuBjBnL,SAzBY,KAEK,EA2C+CwM,GAAmBX,GAAUkB,EAAkBlB,IAA3GzB,EA3Ca,EA2CbA,iBAAkBiB,EA3CL,EA2CKA,sCACpB2B,EAAgBC,IAjBH,SAAbC,EAAaC,GAAe,IAGNC,EAAwBZ,GAAmBW,GAAaJ,EAAkBI,IAA5F/C,iBAERyC,EAAe,GAAD,mBAAMO,GAAN,YAA8BH,GAAiBC,MAE7DnB,GAAgB,CACdG,OAAQY,EACRX,OAAQ,WACNQ,EAAYQ,GACZN,EAAe,YAQrB,OACE,yBAAKvN,UAAU,OAAOc,MAAO,CAAEJ,SAAS,GAAD,OAjDzB,GAiDyB,MAAoBwL,WAAW,GAAD,OAjDvD,GAiDuD,QACnE,kBAAC,EAAD,CACElM,UAAU,kBACVU,SApDU,GAqDVxE,KAAI,sBAAM4O,GAAN,YAA2B4C,IAC/B7J,2BAA6ByJ,GAAevB,EAC5C7I,QAASoK,EACThK,uBAAwBA,EACxBrB,YAAU,MCrDlB8L,IAASrK,OAAO,mBAZhB,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsK,KAAK,KACV,kBAAC,GAAD,WAOM,MAASC,SAASC,eAAe,W","file":"static/js/main.e1e51fca.chunk.js","sourcesContent":["// TODO: data format description\n\nconst LINK_REGEX = /\\[([^\\]]*)\\]\\((http[^\\]\\s]*)\\)/;\nconst CHUNK_TYPES = {\n  NONE: 0,\n  REGULAR: 1,\n  LINK: 2\n};\n\nconst interpolate = (a, b, t) => {\n  return a * (1 - t) + b * t;\n};\n\nconst parseLinks = text => {\n  const linkMetadata = [];\n  let match;\n\n  while (match = text.match(LINK_REGEX)) {\n    text = text.substring(0, match.index) + match[1] + text.substring(match.index + match[0].length);\n    linkMetadata.push({ start: match.index, end: match.index + match[1].length - 1, href: match[2] }); // end is the last index included in the link\n  }\n\n  return [text, linkMetadata];\n};\n\nconst shouldWrap = (text, textIdx, x, initX, rendererWidth, maxWidth, rightMargin = 0) => {\n  if (text[textIdx] === '\\n') return true;\n  if (maxWidth) {\n    // if x exceeds maxWidth or the right margin, wrap\n    if (x >= rendererWidth - rightMargin || x - initX + 1 > maxWidth) {\n      return true;\n    }\n\n    // if maxWidth is defined, we should break lines on spaces\n    if (text[textIdx] === ' ') {\n      let nextBreakIdx = text.substring(textIdx + 1).search(/[\\n ]/); // NOTE: current implementation requires a space at the end of wrapped text in order to wrap the last word correctly\n\n      if (nextBreakIdx >= 0) {\n        nextBreakIdx += textIdx + 1;\n        let nextBreakX = (nextBreakIdx - textIdx) + x; // (index within text of next break - current index in text) + current x == x of next break\n\n        if (nextBreakX >= rendererWidth - rightMargin || nextBreakX - initX + 1 > maxWidth) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n\nconst pushChunk = (chunkMetadata, textIdx, linkMetadata, chunkStart, chunkEnd, chunkProps, notTabbable) => {\n  if (!isFinite(chunkStart) || !isFinite(chunkEnd) || !chunkMetadata) return Infinity;\n\n  let props = chunkProps ? { ...chunkProps } : null;\n\n  if (notTabbable) {\n    if (!props) props = {};\n    props.tabIndex = '-1';\n  }\n\n  if (linkMetadata) {\n    for (let i = 0; i < linkMetadata.length; i++) {\n      if (linkMetadata[i].start <= textIdx && textIdx <= linkMetadata[i].end) {\n        props = props || {};\n        props.href = linkMetadata[i].href;\n        break;\n      }\n    }\n  }\n\n  if (props) chunkMetadata.push({ start: chunkStart, end: chunkEnd, props });\n  return Infinity;\n};\n\nconst atStartOfLink = (textIdx, linkMetadata) => {\n  for (let i = 0; i < linkMetadata.length; i++) {\n    if (linkMetadata[i].start === textIdx) return true;\n  }\n  return false;\n};\n\nconst atEndOfLink = (textIdx, linkMetadata) => {\n  for (let i = 0; i < linkMetadata.length; i++) {\n    if (linkMetadata[i].end === textIdx) return true;\n  }\n  return false;\n};\n\n\n\n\n\n\n\n\nclass StringRenderer {\n  constructor(width, height, data) {\n    this.content = '';\n    this.textMetadata = [];\n    this.data = data || [];\n    this.width = width; // character width of render area (probably screen width)\n    this.breakWidth = this.width + 1;\n    this.height = height; // character height of render area (probably screen height)\n    this.interval = null;\n  }\n\n  setData(data) {\n    this.data = data;\n  }\n\n  getContent() {\n    return this.content;\n  }\n\n  setContent(content) {\n    this.content = content;\n  }\n\n  getTextMetadata() {\n    return this.textMetadata;\n  }\n\n  interpolateContent(initialContent, finalContent, t) {\n    if (initialContent.length > finalContent.length) {\n      finalContent += (new Array(initialContent.length - finalContent.length + 1)).join(' ');\n    } else if (finalContent.length > initialContent.length) {\n      initialContent += (new Array(finalContent.length - initialContent.length + 1)).join(' ');\n    }\n    let interpolatedArr = new Array(initialContent.length);\n\n    const maxLength = Math.max(initialContent.length, finalContent.length);\n    for (let i = 0; i < maxLength; i++) {\n      if (i % this.breakWidth === this.breakWidth - 1) {\n        interpolatedArr[i] = '\\n';\n      } else {\n        interpolatedArr[i] = String.fromCharCode(Math.round(interpolate(initialContent[i].charCodeAt(), finalContent[i].charCodeAt(), t)));\n      }\n    }\n\n    return interpolatedArr.join('');\n  }\n\n  fillEmptyEntriesAndAddLineBreaks(chars) {\n    for (let i = 0, len = chars.length; i < len; i++) {\n      chars[i] = chars[i] || ' ';\n      if (i % this.breakWidth === this.breakWidth - 1) chars[i] = '\\n';\n    }\n  }\n\n  scanForAccessibility(chars, chunkMetadata) {\n\n  }\n\n  generateRenderData(inputData, textMetadata) {\n    let chars = [];\n    let relativeY = 0;\n\n    for (let i = 0; i < inputData.length; i++) {\n      if (!inputData[i]) continue;\n\n      const {type, data} = inputData[i];\n\n      if (type === 'text') {\n        relativeY = this.renderText(chars, textMetadata, data, relativeY);\n      } else if (type === 'textrect') {\n        relativeY = this.renderTextrect(chars, textMetadata, data, relativeY);\n      } else if (type === 'line') {\n        this.renderLine(chars, textMetadata, data);\n      }\n    }\n\n    this.fillEmptyEntriesAndAddLineBreaks(chars);\n    this.scanForAccessibility(chars, textMetadata);\n\n    textMetadata.sort((chunk1, chunk2) => chunk1.start - chunk2.start);\n\n    return { str: chars.join(''), textMetadata };\n  }\n\n  render() {\n    this.textMetadata.length = 0;\n\n    let { str, textMetadata } = this.generateRenderData(this.data, this.textMetadata);\n\n    this.content = str;\n\n    return { str: this.content, textMetadata: this.textMetadata };\n  }\n\n  getIdxWithBreaks(x, y) {\n    return y * this.breakWidth + x;\n  }\n\n  // approach:\n  //  for each index in text:\n  //    decide if we should go to the next line -- if so, update x and y, push chunk, and continue\n  //      if we hit a newline character\n  //      if we exceeded maxWidth, taking rightMargin into account\n  //    if x is at beginning of line and character is whitespace, continue without incrementing x\n  //    if i is at the start of a link, push the last chunk\n  //    then we can write character into out\n  //    if x is at the end of a link, push link chunk\n\n  renderText(out, chunkMetadata, inputData, relativeY) {\n    let { text: initText, start: [x, y], maxWidth, rightMargin, isYRelative, props } = inputData;\n    x = this.parseWidth(x);\n    y = this.parseHeight(out, y);\n    if (isYRelative) y += relativeY;\n    if (x < 0) x += this.width;\n    const initX = x;\n\n    let [text, linkMetadata] = parseLinks(initText);\n\n    let chunkStart = Infinity;\n    let chunkEnd = -Infinity;\n    let maxY = y;\n\n    for (let i = 0; i < text.length; i++) {\n      // x outside of the page; don't write anything to out, just increment x and continue\n      if (x < 0 || (x >= this.width && !maxWidth)) {\n        x++;\n        continue;\n      }\n\n      if (shouldWrap(text, i, x, initX, this.width, maxWidth, rightMargin)) {\n        x = initX;\n        y++;\n        chunkStart = pushChunk(chunkMetadata, i, linkMetadata, chunkStart, chunkEnd, props); // NOTE: not ideal for a11y to break up links across lines\n        continue;\n      }\n\n      if (x === initX && text[i] === ' ') continue;\n\n      if (atStartOfLink(i, linkMetadata)) chunkStart = pushChunk(chunkMetadata, -1, null, chunkStart, chunkEnd, props);\n\n      const outIdx = this.getIdxWithBreaks(x, y);\n      out[outIdx] = text[i];\n      chunkStart = Math.min(chunkStart, outIdx);\n      chunkEnd = Math.max(chunkEnd, outIdx);\n      maxY = Math.max(maxY, y);\n      x++;\n\n      if (atEndOfLink(i, linkMetadata)) chunkStart = pushChunk(chunkMetadata, i, linkMetadata, chunkStart, chunkEnd, props);\n    }\n\n    pushChunk(chunkMetadata, -1, null, chunkStart, chunkEnd, props);\n\n    if (text[text.length - 1] === '\\n') out[this.getIdxWithBreaks(x, y - 1)] = '\\n';\n\n    return maxY;\n  }\n\n  // note: inputData reference may be shared by multiple chunkMetadata entries\n  renderTextrect(out, chunkMetadata, inputData, relativeY) {\n    let { text, start: [x, y], width, isYRelative, props } = inputData;\n    x = this.parseWidth(x);\n    y = this.parseHeight(out, y);\n    if (isYRelative) y += relativeY;\n    if (x < 0) x += this.width;\n\n    let chunkStart = -Infinity;\n    let chunkEnd = -Infinity;\n    let maxY = 0;\n    let tabbableChunk = true;\n\n    for (let i = 0; i < text.length; i++) {\n      if (x + (i % width) < 0 || x + (i % width) >= this.width) continue;\n      const dx = i % width;\n      const dy = Math.floor(i / width);\n      const outIdx = this.getIdxWithBreaks(x + dx, y + dy);\n      out[outIdx] = text[i];\n      maxY = Math.max(maxY, y + dy);\n\n      if (outIdx > chunkEnd + 1) { // if we've wrapped lines, create new metadata\n        pushChunk(chunkMetadata, -1, null, chunkStart, chunkEnd, props, !tabbableChunk);\n        if (isFinite(chunkStart) && isFinite(chunkEnd) && props && props.onClick) tabbableChunk = false;\n        chunkStart = outIdx;\n      }\n      chunkEnd = outIdx;\n    }\n\n    pushChunk(chunkMetadata, -1, null, chunkStart, chunkEnd, props, !tabbableChunk);\n\n    return maxY;\n  }\n\n  renderLine(out, chunkMetadata, inputData) {\n    const { start, end } = inputData;\n    if (start[0] === end[0] && start[1] === end[1]) { // point\n      const outIdx = this.getIdxWithBreaks(start[0], start[1]);\n      out[outIdx] = '\\u00b7';\n      chunkMetadata.push({ start: outIdx, end: outIdx, props: { 'aria-hidden': true } });\n    } else if (start[0] === end[0]) { // vertical\n      const startHeight = this.parseHeight(out, start[1]);\n      const endHeight = this.parseHeight(out, end[1]);\n      for (let i = startHeight; i <= endHeight; i++) {\n        const outIdx = this.getIdxWithBreaks(this.parseWidth(start[0]), i);\n        out[outIdx] = '|';\n      }\n    } else if (start[1] === end[1]) { // horizontal\n      const startWidth = this.parseWidth(start[0]);\n      const endWidth = this.parseWidth(end[0]);\n      const startIdx = this.getIdxWithBreaks(startWidth, this.parseHeight(out, start[1]));\n      const endIdx = this.getIdxWithBreaks(endWidth, this.parseHeight(out, start[1]));\n      for (let i = startWidth; i <= endWidth; i++) {\n        const outIdx = this.getIdxWithBreaks(i, this.parseHeight(out, start[1]));\n        out[outIdx] = '\\u2014';\n      }\n      chunkMetadata.push({ start: startIdx, end: endIdx, props: {'aria-hidden': true} });\n    }\n  }\n\n  parseWidth(dim) {\n    return typeof dim === 'number' ? dim : Math.floor(parseFloat(dim) * this.width / 100);\n  }\n\n  parseHeight(chars, dim) {\n    if (typeof dim === 'number') return dim;\n    const height = Math.max(this.height, Math.ceil(chars.length / this.width));\n    return parseFloat(dim) * height / 100;\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.breakWidth = this.width + 1;\n    this.height = height;\n  }\n}\n\nexport default StringRenderer;\n","import React from 'react';\n\nconst spaceOrEnter = evt => {\n  if (evt.code) return evt.code === 'Space' || evt.code === 'Enter';\n  return evt.which === 32 || evt.which === 13;\n}\n\nconst AriaButton = ({ children, onClick, className, ...other }) => {\n  return (\n    <span\n      className={`${className} clickable`}\n      role=\"button\"\n      tabIndex=\"0\"\n      onClick={onClick}\n      onKeyDown={evt => { if (spaceOrEnter(evt)) { evt.preventDefault(); evt.stopPropagation(); onClick(evt); }}}\n      {...other}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport default AriaButton;\n\n","import React from 'react';\n\nimport AriaButton from './components/AriaButton';\n\n// inputs:\n//   str: big string with line breaks and spaces\n//   textMetadata: array of chunk metadata describing how to wrap intervals in the string\n//                 assumed to be in order by start index\n\nexport default (str, textMetadata, fontSize) => {\n  let elements = [];\n\n  let lastEnd = -1; // the last index we've added to elements already\n  for (let i = 0; i < textMetadata.length; i++) {\n    let { start, end, props } = textMetadata[i];\n    start = Math.max(start, lastEnd + 1);\n    if (start > lastEnd + 1) elements.push(<span key={`span-prev-${i}`}>{str.substring(lastEnd + 1, start)}</span>);\n\n    if (props && props.href) {\n      elements.push(<a key={`a-${i}`} {...props}>{str.substring(start, end + 1)}</a>);\n    } else if (props && props.onClick) {\n      elements.push(<AriaButton key={`ariabutton-${i}`} style={{fontSize}} {...props}>{str.substring(start, end + 1)}</AriaButton>);\n    } else if (props) {\n      elements.push(<span key={`span-${i}`} {...props}>{str.substring(start, end + 1)}</span>);\n    } else {\n      elements.push(<span key={`span-${i}`}>{str.substring(start, end + 1)}</span>);\n    }\n    lastEnd = end;\n  }\n  if (lastEnd < str.length) elements.push(<span key=\"span-last\">{str.substring(lastEnd + 1, str.length)}</span>);\n  return elements;\n};","const navWidth = 0;\nconst topBarHeight = 7;\nconst contentOffsets = [ navWidth + 2, topBarHeight + 2 ];\n\nconst maxPagePxWidth = 1400;\n\n// adapted from approach here: https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\nconst isTouchScreen = !!(navigator.maxTouchPoints && navigator.maxTouchPoints > 0);\n\nexport { navWidth, topBarHeight, contentOffsets, maxPagePxWidth, isTouchScreen };","import React from 'react';\n\nimport StringRenderer from '../StringRenderer';\nimport metadataParser from '../metadataParser';\nimport { maxPagePxWidth } from '../constants';\n\nconst getWindowWidth = () => {\n  return Math.min(window.innerWidth, maxPagePxWidth);\n};\n\n\n\nclass StringRenderArea extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.singleCharRef = React.createRef();\n    this.doubleCharRef = React.createRef(); // it seems like characters blocks have some vertical padding, so use a single height char and a double-height char to figure out what that padding is\n\n    this.singleCharWidth = -1;\n    this.singleCharHeight = -1;\n    this.windowCharWidth = 40;\n    this.windowCharHeight = 40;\n    this.verticalCharPadding = 0;\n    this.resizeHandler = null;\n    this.content = '';\n    this.stringRenderer = new StringRenderer(this.windowCharWidth, this.windowCharHeight, props.data);\n  }\n\n  // when component mounts, set up resize handler and figure out pixel dims of a single character\n  // also use height of two chars in a column to find the padding around each text block\n  componentDidMount() {\n    if (this.props.autoResize) {\n      this.resizeHandler = this.resize.bind(this);\n      window.addEventListener('resize', this.resizeHandler);\n    }\n\n    const charHeight = this.singleCharRef.current.getBoundingClientRect().height;\n    const doubleCharHeight = this.doubleCharRef.current.getBoundingClientRect().height;\n    const verticalCharPadding = 2 * charHeight - doubleCharHeight; // total vertical padding around a text block\n\n    this.singleCharWidth = this.singleCharRef.current.getBoundingClientRect().width;\n    this.singleCharHeight = charHeight - verticalCharPadding;\n    this.verticalCharPadding = verticalCharPadding;\n\n    // console.log('SINGLE RENDER AREA:', this.singleCharWidth, this.singleCharHeight, this.verticalCharPadding, window.devicePixelRatio);\n\n    this.resize();\n    if (this.props.onSetCharDims) this.props.onSetCharDims(this.singleCharWidth, this.singleCharHeight, this.verticalCharPadding);\n  }\n\n  // when component is about to unmount, remove resize handler\n  componentWillUnmount() {\n    if (this.resizeHandler) {\n      window.removeEventListener('resize', this.resizeHandler);\n      this.resizeHandler = null;\n    }\n  }\n\n  // handle resizing by updating stringRenderer with new width and forcing a re-render\n  resize() {\n    this.windowCharWidth = Math.floor((this.props.fixedWidthPx || getWindowWidth()) / this.singleCharWidth);\n    this.windowCharHeight = Math.floor(((this.props.fixedHeightPx || window.innerHeight) - this.verticalCharPadding) / this.singleCharHeight);\n    this.stringRenderer.setDimensions(this.windowCharWidth, this.windowCharHeight);\n    this.forceUpdate();\n  }\n\n  evaluateData(data) {\n\n    const out = [];\n    for (let i = 0; i < data.length; i++) {\n      if (typeof data[i] !== 'function') {\n        out.push(data[i]);\n      } else {\n        out.push(...data[i](this.windowCharWidth, this.windowCharHeight));\n      }\n    }\n    return out;\n  }\n\n  // if animation data is being sent into the component (via props.newData and props.interpolationParameter),\n  // perform interpolation and return corresponding elements\n  interpolateToNewData() {\n    let { str: finalContent, textMetadata: finalTextMetadata } = this.stringRenderer.generateRenderData(this.evaluateData(this.props.newData), []);\n    let intermediateContent = this.stringRenderer.interpolateContent(this.content, finalContent, this.props.interpolationParameter);\n    return metadataParser(intermediateContent, finalTextMetadata, this.props.fontSize);\n  }\n\n  // if we're animating (i.e., props.newData is set), interpolate with old page data\n  // if not, and if we've already found the width of a char, generate elements from this.props.data\n  render() {\n    let elements;\n\n    if (this.props.newData) {\n      elements = this.interpolateToNewData();\n    } else if (this.singleCharWidth > 0) {\n      const data = this.evaluateData(this.props.data);\n      this.stringRenderer.setData(data);\n      const {str, textMetadata} = this.stringRenderer.render();\n      this.content = str;\n      elements = metadataParser(str, textMetadata, this.props.fontSize);\n    }\n\n    return (\n      <div className={`string-render-area ${this.props.className}`}>\n        {elements || <React.Fragment><span ref={this.singleCharRef}>{'_'}</span><br /><span ref={this.doubleCharRef}>{'_\\n_'}</span></React.Fragment>}\n        {this.props.childElementDataGenerator && this.props.childElementDataGenerator(this.singleCharWidth, this.singleCharHeight, this.verticalCharPadding)}\n      </div>\n    );\n  }\n}\n\nexport default StringRenderArea;\n","const face1 = '                          /--- //\\\\_         /\\\\\\\\/\\\\/\\\\-\\\\/\\\\-\\\\      -/\\\\M\\\\\\\\/\\\\ \\\\\\\\MM-\\\\   ///          ||\\\\|   //            \\\\\\\\|   ||/==>   <==\\\\ |||   || <a>   <a>   |/)  \\\\|      |     /|/    |    / \\\\    /||     |  _ ^-^) _   |     \\\\\\\\( ______ )/ /      \\\\  \\\\____/ / /        \\\\         /          \\\\\\\\_____//      ';\nconst face2 = '                          /--- //\\\\_         /\\\\\\\\/\\\\/\\\\-\\\\/\\\\-\\\\      -/\\\\M\\\\\\\\/\\\\ \\\\\\\\MM-\\\\   ///          ||\\\\|   //       <==  \\\\\\\\|   ||/==>      \\\\ |||   || <a>   <a>   |/)  \\\\|      |     /|/    |    / \\\\    /||     |  _ ^-^) _   |     \\\\\\\\( ______ )/ /      \\\\  \\\\____/ / /        \\\\         /          \\\\\\\\_____//      ';\nexport const FACE = [face1, face2];\n\nconst dancing1 = '                                      ||                                              _||\\\\\\\\\\\\                                           \\\\_  _\\\\                         /--- //\\\\_           \\\\  \\\\                       /\\\\\\\\/\\\\/\\\\-\\\\/\\\\-\\\\          \\\\  \\\\                     -/\\\\M\\\\\\\\/\\\\ \\\\\\\\MM-\\\\          \\\\  \\\\                  ///          ||\\\\|           \\\\  \\\\                 //            \\\\\\\\|            \\\\  \\\\                ||/==>   <==\\\\ |||             \\\\  \\\\               || <a>   <a>   |/)            /  |               \\\\|      |     /|/            /   /                |    / \\\\    /||            /   /                 |  _ ^-^) _   |           /   /                  \\\\\\\\( ______ )/ |          /___/_                   \\\\  \\\\____/ /  /         /     |                    \\\\         //|        /      /                     \\\\\\\\______// |\\\\      /      |              _______/|          / \\\\____/      /              /        \\\\         /             /              /          \\\\_______/             /              /                                |              /                                /              /                                /              /      /|    S E A T T L E       /              /______/ |                       |               |    /   |   M A R I N E R S     |               |   |    |                       |            ';\nconst dancing2 = '         ||                                            ///||_                                           /_  _/                                           /  /         /--- //\\\\_                          /  /        /\\\\\\\\/\\\\/\\\\-\\\\/\\\\-\\\\                       /  /        -/\\\\M\\\\\\\\/\\\\ \\\\\\\\MM-\\\\                     /  /       ///          ||\\\\|                    /  /        //            \\\\\\\\|                   /  /         ||/==>   <==\\\\ |||                   |  \\\\         || <a>   <a>   |/)                  \\\\   \\\\        \\\\|      |     /|/                    \\\\   \\\\        |    / \\\\    /||                      \\\\   \\\\       |  _ ^-^) _   |                      _\\\\___\\\\      \\\\\\\\( ______ )/ |                      |     \\\\      \\\\  \\\\____/ /  /                      \\\\      \\\\      \\\\         //|                       |      \\\\      \\\\\\\\______// |\\\\                       \\\\      \\\\____/|          / \\\\_______                \\\\           \\\\         /          \\\\                \\\\           \\\\_______/            \\\\                |                                \\\\                \\\\                                \\\\                \\\\                                \\\\                \\\\     S E A T T L E      |\\\\      \\\\                |                       | \\\\______\\\\               |   M A R I N E R S     |   \\\\    |               |                       |    |   |   ';\nexport const DANCING = [dancing1, dancing2];\n\nconst vote = '\\\n _____________________________________________________________________________  \\\n|  _________________________________________________________________________  | \\\n| |  ________    _           _________     _____      ________   _________  | | \\\n| | |  _____ \\\\  | |         |  _______|   / ___ \\\\    / _______| |  _______| | | \\\n| | | |     \\\\ \\\\ | |         | |          / /   \\\\ \\\\  | /         | |         | | \\\n| | | |     | | | |         | |_______  | |_____| | | |______   | |_______  | | \\\n| | | |_____/ / | |         |  _______| |  _____  |  \\\\______ \\\\  |  _______| | | \\\n| | |  ______/  | |         | |         | |     | |         \\\\ \\\\ | |         | | \\\n| | | |         | |         | |         | |     | |         | | | |         | | \\\n| | | |         | |_______  | |_______  | |     | |  _______/ | | |_______  | | \\\n| | |_|         |_________| |_________| |_|     |_| |________/  |_________| | | \\\n| |                                                                         | | \\\n| |  _                _    __________    ______________   ____________   _  | | \\\n| | \\\\ \\\\              / /  / ________ \\\\  |______   _____| |  __________| | | | | \\\n| |  \\\\ \\\\            / /  / /        \\\\ \\\\        | |       | |            | | | | \\\n| |   \\\\ \\\\          / /  / /          \\\\ \\\\       | |       | |__________  | | | | \\\n| |    \\\\ \\\\        / /  / /            \\\\ \\\\      | |       |  __________| | | | | \\\n| |     \\\\ \\\\      / /   | |            | |      | |       | |            | | | | \\\n| |      \\\\ \\\\    / /    \\\\ \\\\            / /      | |       | |            |_| | | \\\n| |       \\\\ \\\\  / /      \\\\ \\\\          / /       | |       | |                | | \\\n| |        \\\\ \\\\/ /        \\\\ \\\\________/ /        | |       | |__________   _  | | \\\n| |         \\\\__/          \\\\__________/         |_|       |____________| |_| | | \\\n| |_________________________________________________________________________| | \\\n|_____________________________________________________________________________| \\\n';\n\nconst register = '\\\n _______________________________________________________________________________________________________ \\\n|  ___________________________________________________________________________________________________  |\\\n| |  ________    _________     ______    _________    ________   _________   _________   ________     | |\\\n| | |  _____ \\\\  |  _______|   / ____ \\\\  |___   ___|  / _______| |___   ___| |  _______| |  _____ \\\\    | |\\\n| | | |     \\\\ \\\\ | |          / /    \\\\_\\\\     | |     | /             | |     | |         | |     \\\\ \\\\   | |\\\n| | | |     | | | |_______  | |             | |     | |______       | |     | |_______  | |     | |   | |\\\n| | | |_____/ / |  _______| | |    ___      | |      \\\\______ \\\\      | |     |  _______| | |_____/ /   | |\\\n| | |  ___  _/  | |         | |   |_  |     | |             \\\\ \\\\     | |     | |         |  ___  _/    | |\\\n| | | |   \\\\ \\\\   | |         | |     | |     | |             | |     | |     | |         | |   \\\\ \\\\     | |\\\n| | | |    \\\\ \\\\  | |_______   \\\\ \\\\____/ /  ___| |___  ________/ |     | |     | |_______  | |    \\\\ \\\\    | |\\\n| | |_|     \\\\_\\\\ |_________|   \\\\______/  |_________| |________/      |_|     |_________| |_|     \\\\_\\\\   | |\\\n| |                                                                                                   | |\\\n| |                            _                _    __________    ______________   ____________   _  | |\\\n| |   _________     ______    \\\\ \\\\              / /  / ________ \\\\  |______   _____| |  __________| | | | |\\\n| |  |___   ___|   / ____ \\\\    \\\\ \\\\            / /  / /        \\\\ \\\\        | |       | |            | | | |\\\n| |      | |      / /    \\\\ \\\\    \\\\ \\\\          / /  / /          \\\\ \\\\       | |       | |__________  | | | |\\\n| |      | |     | |      | |    \\\\ \\\\        / /  / /            \\\\ \\\\      | |       |  __________| | | | |\\\n| |      | |     | |      | |     \\\\ \\\\      / /   | |            | |      | |       | |            | | | |\\\n| |      | |     | |      | |      \\\\ \\\\    / /    \\\\ \\\\            / /      | |       | |            |_| | |\\\n| |      | |     | |      | |       \\\\ \\\\  / /      \\\\ \\\\          / /       | |       | |                | |\\\n| |      | |      \\\\ \\\\____/ /         \\\\ \\\\/ /        \\\\ \\\\________/ /        | |       | |__________   _  | |\\\n| |      |_|       \\\\______/           \\\\__/          \\\\__________/         |_|       |____________| |_| | |\\\n| |___________________________________________________________________________________________________| |\\\n|_______________________________________________________________________________________________________|\\\n';\n\nconst registerVert = '\\\n _________________________ \\\n|  _____________________  |\\\n| |  _                _ | |\\\n| | \\\\ \\\\              / /| |\\\n| |  \\\\ \\\\            / / | |\\\n| |   \\\\ \\\\          / /  | |\\\n| |    \\\\ \\\\        / /   | |\\\n| |     \\\\ \\\\      / /    | |\\\n| |      \\\\ \\\\    / /     | |\\\n| |       \\\\ \\\\  / /      | |\\\n| |        \\\\ \\\\/ /       | |\\\n| |         \\\\__/        | |\\\n| |     __________      | |\\\n| |    / ________ \\\\     | |\\\n| |   / /        \\\\ \\\\    | |\\\n| |  / /          \\\\ \\\\   | |\\\n| | / /            \\\\ \\\\  | |\\\n| | | |            | |  | |\\\n| | \\\\ \\\\            / /  | |\\\n| |  \\\\ \\\\          / /   | |\\\n| |   \\\\ \\\\________/ /    | |\\\n| |    \\\\__________/     | |\\\n| |  ______________     | |\\\n| | |______   _____|    | |\\\n| |        | |          | |\\\n| |        | |          | |\\\n| |        | |          | |\\\n| |        | |          | |\\\n| |        | |          | |\\\n| |        | |          | |\\\n| |        | |          | |\\\n| |        |_|          | |\\\n| |  ____________   _   | |\\\n| | |  __________| | |  | |\\\n| | | |            | |  | |\\\n| | | |__________  | |  | |\\\n| | |  __________| | |  | |\\\n| | | |            | |  | |\\\n| | | |            |_|  | |\\\n| | | |                 | |\\\n| | | |__________   _   | |\\\n| | |____________| |_|  | |\\\n| |_____________________| |\\\n|_________________________|\\\n';\n\nexport const VOTE = vote;\nexport const REGISTER = register;\nexport const REGISTER_VERT = registerVert;\n\n","import { DANCING, REGISTER, REGISTER_VERT } from '../asciiArt';\nimport { contentOffsets } from '../constants';\n\nconst [left, top] = contentOffsets;\n\nexport default () => {\n  return {\n    stringRenderData: [ (windowCharWidth, windowCharHeight) => {\n      const canFitHorizRegister = windowCharWidth > 105 + left;\n      const nameTop = canFitHorizRegister ? top + 26 : top + 46;\n      const webringTop = nameTop + 34;\n      const voteText = canFitHorizRegister ? REGISTER : REGISTER_VERT;\n      return [\n        // vote banner\n        { type: 'textrect', data: { start: [left,top], width: canFitHorizRegister ? 105 : 27, text: voteText, props: { className: 'color-cycle', 'aria-label': 'Please Vote! Links to vote.org', onClick: () => window.location = 'https://www.vote.org/' }}},\n        //\n        { type: 'text', data: { start: [left, nameTop], text: \"I'm Ben:\" }},\n        { type: 'textrect', data: { start: [left,nameTop + 2], width: 49, text: DANCING[Math.floor(Math.random() * 2)], props: { 'aria-hidden': true } }},\n        // webring\n        { type: 'text', data: { start: [left, webringTop], text: 'This site is a member of the [Bill De Beest](https://billdebeest.club) webring!' }},\n        { type: 'text', data: { start: [left + 6, webringTop + 2], text: '<-- previous', props: { href: 'https://billdebeest.club/prev' } }},\n        { type: 'text', data: { start: [left + 21, webringTop + 2], text: '!random!', props: { href: 'https://billdebeest.club/random' } }},\n        { type: 'text', data: { start: [left + 32, webringTop + 2], text: 'next -->', props: { href: 'https://billdebeest.club/next' } }},\n        { type: 'text', data: { start: [left, webringTop + 4], text: '\\n' }}\n      ];\n    } ]\n  };\n};\n","import { contentOffsets } from '../constants';\nconst [left, top] = contentOffsets;\n\nconst projects = '\\\n';\n\nexport default () => {\n  return {\n    stringRenderData: [\n      { type: 'textrect', data: { start: [left,top], width: 40, text: projects }}\n    ]\n  };\n}","const CHAR_GRADIENT = [\n  '#',\n  'm',\n  'o',\n  '\\u2022',\n  '\\u2218',\n  '\\u00b7',\n  '.',\n  ' '\n];\n\nclass ImageConverter {\n  constructor(characterWidth = 1, characterHeight = 2, verticalCharPadding = 0) {\n    this.charWidth = characterWidth; // width of a single character\n    this.charHeight = characterHeight; // height of a single character\n    this.verticalCharPadding = verticalCharPadding; // padding around a block of text\n  }\n\n  setCharDimensions(w, h, p) {\n    this.charWidth = w;\n    this.charHeight = h;\n    this.verticalCharPadding = p;\n  }\n\n  convolveKernel(outRgba, inRgba, width, height, kernel, kernelWidth) {\n    const kernelHeight = kernel.length / kernelWidth;\n    const kernelHalfWidth = (kernelWidth - 1) / 2;\n    const kernelHalfHeight = (kernelHeight - 1) / 2;\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        let rsum = 0;\n        let gsum = 0;\n        let bsum = 0;\n        for (let dy = -kernelHalfHeight; dy <= kernelHalfHeight; dy++) {\n          for (let dx = -kernelHalfWidth; dx <= kernelHalfWidth; dx++) {\n            const xIdx = Math.min(width - 1, Math.max(0, x + dx));\n            const yIdx = Math.min(height - 1, Math.max(0, y + dy));\n            const offset = width * yIdx + xIdx;\n\n            const r = inRgba[4 * offset];\n            const g = inRgba[4 * offset + 1];\n            const b = inRgba[4 * offset + 2];\n\n            const kernelIdx = (dy + kernelHalfHeight) * kernelWidth + (dx + kernelHalfWidth);\n            rsum += r * kernel[kernelIdx];\n            gsum += g * kernel[kernelIdx];\n            bsum += b * kernel[kernelIdx];\n          }\n        }\n        const outOffset = width * y + x;\n        outRgba[4 * outOffset] = rsum;\n        outRgba[4 * outOffset + 1] = gsum;\n        outRgba[4 * outOffset + 2] = bsum;\n      }\n    }\n  }\n\n  forEachPixel(inRgba, width, height, fn) {\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        const idx = 4 * (width * y + x); // index into inRgba\n        const r = inRgba[idx];\n        const g = inRgba[idx + 1];\n        const b = inRgba[idx + 2];\n        const a = inRgba[idx + 3];\n        fn(r, g, b, a, idx);\n      }\n    }\n  }\n\n  invert(outRgba, inRgba, width, height) {\n    this.forEachPixel(inRgba, width, height, (r, g, b, a, idx) => {\n      outRgba[idx] = 255 - outRgba[idx];\n      outRgba[idx + 1] = 255 - outRgba[idx + 1];\n      outRgba[idx + 2] = 255 - outRgba[idx + 2];\n    });\n  }\n\n  grayscale(outRgba, imageData) {\n    this.forEachPixel(imageData.data, imageData.width, imageData.height, (r, g, b, a, idx) => {\n      const intensity = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n      outRgba[idx] = intensity;\n      outRgba[idx + 1] = intensity;\n      outRgba[idx + 2] = intensity;\n      outRgba[idx + 3] = a;\n    });\n  }\n\n  edgeDetection(outRgba, imageData) {\n    const grayscaleImage = new Array(imageData.data.length);\n    this.grayscale(grayscaleImage, imageData);\n\n    const sobelHoriz = [\n      -1, 0, 1,\n      -2, 0, 2,\n      -1, 0, 1\n    ];\n    const scharrHoriz = [\n      3, 0, -3,\n      10, 0, -10,\n      3, 0, -3\n    ];\n    const horizConvolved = new Array(imageData.data.length);\n    this.convolveKernel(horizConvolved, grayscaleImage, imageData.width, imageData.height, sobelHoriz, 3);\n\n    const sobelVert = [\n      -1, -2, -1,\n      0, 0, 0,\n      1, 2, 1\n    ];\n    const scharrVert = [\n      3, 10, 3,\n      0, 0, 0,\n      -3, -10, -3\n    ];\n    const vertConvolved = new Array(imageData.data.length);\n    this.convolveKernel(vertConvolved, grayscaleImage, imageData.width, imageData.height, sobelVert, 3);\n\n    for (let i = 0; i < horizConvolved.length; i += 4) {\n      const finalIntensity = Math.sqrt(Math.pow(horizConvolved[i], 2) + Math.pow(vertConvolved[i], 2));\n      outRgba[i] = finalIntensity;\n      outRgba[i + 1] = finalIntensity;\n      outRgba[i + 2] = finalIntensity;\n      outRgba[i + 3] = imageData.data[i + 3];\n    }\n\n    this.invert(outRgba, outRgba, imageData.width, imageData.height);\n  }\n\n  getCharForVal(val) {\n    for (let i = 0; i < CHAR_GRADIENT.length; i++) {\n      const linearThresh = (i + 1) / CHAR_GRADIENT.length;\n      const thresh = Math.pow(linearThresh, 1);\n      if (val < thresh) return CHAR_GRADIENT[i];\n    }\n    return CHAR_GRADIENT[CHAR_GRADIENT.length - 1];\n  }\n\n  convert(imageData, outCharacterWidth) {\n    const aspectRatio = imageData.width / imageData.height;\n    const outCharacterHeight = Math.ceil((outCharacterWidth / aspectRatio) / (this.charHeight / this.charWidth));\n    const rgb = imageData.data;\n    const block = [];\n    const out = [];\n    const imageCharacterWidth = imageData.width / outCharacterWidth;\n    const imageCharacterHeight = imageData.height / outCharacterHeight;\n\n    for (let y = 0; y < outCharacterHeight; y++) { // for each character row\n      for (let x = 0; x < outCharacterWidth; x++) { // for each character in row\n        // find block of source image that corresponds to this character\n        const pxOffset = x * imageCharacterWidth;\n        const pyOffset = y * imageCharacterHeight;\n        let ctr = 0;\n        for (let py = pyOffset; py < pyOffset + imageCharacterHeight; py++) {\n          const roundPy = Math.round(py);\n          for (let px = pxOffset; px < pxOffset + imageCharacterWidth; px++) {\n            const roundPx = Math.round(px);\n            const pixelIndex = roundPy * imageData.width + roundPx;\n            block[ctr++] = rgb[4 * pixelIndex];\n            block[ctr++] = rgb[4 * pixelIndex + 1];\n            block[ctr++] = rgb[4 * pixelIndex + 2];\n          }\n        }\n        block.length = ctr;\n\n        const blockRgbSum = block.reduce((acc, val) => acc + val, 0);\n        const val = blockRgbSum / (255 * block.length);\n        out.push(this.getCharForVal(val));\n      }\n    }\n\n    return out;\n  }\n}\n\nexport default ImageConverter;","import React from 'react';\nimport StringRenderArea from './StringRenderArea';\nimport ImageConverter from '../ImageConverter';\n\nlet numRenders = 0;\n\nclass TV extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      singleCharWidth: 1,\n      singleCharHeight: 2,\n      verticalCharPadding: 0,\n      paused: false\n    };\n\n    this.imageConverter = new ImageConverter();\n    this.interval = null;\n    this.refreshRate = 30;\n\n    this.videoRef = React.createRef();\n    this.canvasRef = React.createRef();\n\n    this.frameData = null;\n    this.frameConfig = {};\n\n    this.setCharDims = this.setCharDims.bind(this);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      if (this.shouldRender()) {\n        this.forceUpdate();\n      }\n    }, 1000 / this.refreshRate);\n  }\n\n  componentWillUnmount() {\n    if (this.interval) clearInterval(this.interval);\n    this.interval = null;\n  }\n\n  getBlankScreenElements() {\n    return [ // TODO maybe we could reuse resources from frame to frame\n      { type: 'textrect', data: { start: [0,0], width: this.getCharWidthTvUnits(), text: (new Array(this.getCharWidthTvUnits() * this.getCharHeightTvUnits() + 1)).join('#'), props: { 'aria-hidden': true } }}\n    ];\n  }\n\n\n\n  getElementsFromVideo() {\n    const video = this.videoRef.current;\n    const canvas = this.canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    canvas.width = 300;\n    canvas.height = canvas.width * video.videoHeight / video.videoWidth;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n    if (this.props.edgeModeOn === true) this.imageConverter.edgeDetection(imageData.data, imageData);\n    context.putImageData(imageData, 0, 0);\n\n    const asciiImageArray = this.imageConverter.convert(imageData, this.getCharWidthTvUnits());\n    return [\n      { type: 'textrect', data: { start: [0,0], width: this.getCharWidthTvUnits(), text: asciiImageArray.join(''), props: { 'aria-hidden': true } } }\n    ];\n  }\n\n  getCharWidthTvUnits() {\n    return Math.floor(this.props.tvWidthPx / this.state.singleCharWidth);\n  }\n\n  getCharHeightTvUnits() {\n    return Math.floor((this.props.tvHeightPx - this.state.verticalCharPadding) / this.state.singleCharHeight);\n  }\n\n  setCharDims(singleCharWidth, singleCharHeight, verticalCharPadding) {\n    this.imageConverter.setCharDimensions(singleCharWidth, singleCharHeight, verticalCharPadding);\n    this.setState({ singleCharWidth, singleCharHeight, verticalCharPadding });\n  }\n\n  shouldRender() {\n    return true;\n  }\n\n  render() {\n    let elements;\n    // numRenders++;\n    // if (numRenders % 10 === 0) console.log('numRenders', numRenders);\n\n    if (this.props.on && this.videoRef.current && this.videoRef.current.videoHeight) {\n      if (this.state.paused) {\n        if (!this.videoRef.current.paused) this.videoRef.current.pause();\n      } else if (this.videoRef.current.paused) {\n        this.videoRef.current.play();\n      }\n      elements = this.getElementsFromVideo();\n    } else {\n      if (this.videoRef.current && !this.videoRef.current.paused) this.videoRef.current.pause();\n      elements = this.getBlankScreenElements();\n    }\n\n    return (\n      <React.Fragment>\n        <span onClick={() => this.setState({paused: !this.state.paused})}>\n          <StringRenderArea\n            className=\"tv-screen\"\n            data={elements}\n            fixedWidthPx={this.props.tvWidthPx}\n            fixedHeightPx={this.props.tvHeightPx}\n            onSetCharDims={this.setCharDims}\n          />\n        </span>\n\n        {/* hidden video and canvas elements from which to pull image data */}\n        <div key=\"video-helper-elt-container\" className=\"video-helper-elt-container\"><video controls width=\"300px\" ref={this.videoRef} src={this.props.src} /><canvas ref={this.canvasRef} /></div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TV;\n","import React from 'react';\nimport TV from '../components/TV.js';\nimport { contentOffsets } from '../constants';\n\nconst [contentLeft, contentTop] = contentOffsets;\n\n\nconst tv = '\\\n__________________________________________________________________________________________\\\n|                                                                    |                   |\\\n|  ________________________________________________________________  |___________________|\\\n|  |\\\\____________________________________________________________/|  |    - QUALITY -    |\\\n|  ||                                                            ||  |      _______      |\\\n|  ||                                                            ||  |     / _____ \\\\     |\\\n|  ||                                                            ||  |    / /   //\\\\ \\\\    |\\\n|  ||                                                            ||  |   / /   //  \\\\ \\\\   |\\\n|  ||                                                            ||  |   \\\\ \\\\  //   / /   |\\\n|  ||                                                            ||  |    \\\\ \\\\_____/ /    |\\\n|  ||                                                            ||  |     \\\\_______/     |\\\n|  ||                                                            ||  |                   |\\\n|  ||                                                            ||  |    - CHANNEL -    |\\\n|  ||                                                            ||  |    DOWN     UP    |\\\n|  ||                                                            ||  |                   |\\\n|  ||                                                            ||  |    -EDGE MODE-    |\\\n|  ||                                                            ||  |    OFF      ON    |\\\n|  ||                                                            ||  |___________________|\\\n|  ||                                                            ||  | _________________ |\\\n|  ||                                                            ||  | _________________ |\\\n|  ||                                                            ||  | _________________ |\\\n|  ||                                                            ||  | _________________ |\\\n|  ||                                                            ||  | _________________ |\\\n|  ||                                                            ||  | _________________ |\\\n|  ||____________________________________________________________||  |___________________|\\\n|  |/____________________________________________________________\\\\|  |                   |\\\n|                                                                    |         ||        |\\\n|____________________________________________________________________|___________________|\\\n|  /                                                                                  \\\\  |\\\n|_/                                                                                    \\\\_|\\\n';\n\nconst CHANNELS = [\n  { src: \"/yell-ElkandCars000125MTS.mp4\", title: \"Bull elk ramming a car (NPS)\", url: \"https://www.nps.gov/media/video/view.htm?id=CEF4E37F-1DD8-B71B-0B7B5EC8C8071E13\" },\n  { src: \"/yell-BighornSheep00697MTS_original_1920x1080.mp4\", title: \"Bighorn Sheep (NPS)\", url: \"https://www.nps.gov/media/video/view.htm?id=0E023AB3-155D-451F-677AEBFA0925A047\" },\n  { src: \"/yell-GBear00452.mp4\", title: \"Grizzly Bear (early spring) (NPS)\", url: \"https://www.nps.gov/media/video/view.htm?id=DCE37092-155D-451F-67F448AC5DE819B0\" },\n  { src: \"/grca-paddleraft.mp4\", title: \"Paddle Assisted Raft in Rapid (NPS)\", url: \"https://www.nps.gov/media/video/view.htm?id=5A9F1B07-155D-451F-673B996C4F4164BA\" },\n  { src: \"/grca-trainmix.mp4\", title: \"Grand Canyon Railway Mix (NPS)\", url: \"https://www.nps.gov/grca/learn/photosmultimedia/b-roll_hd29.htm\" },\n  { src: \"/242_OceanWorlds_small.mp4\", title: \"ScienceCasts: Ocean Worlds (NASA)\", url: \"https://images.nasa.gov/details-242_OceanWorlds\"}\n  // { src: \"yell-CTTroutGOPRO104MP4.mp4\", title: \"Cutthroat Trout (NPS)\", url: \"https://www.nps.gov/media/video/view.htm?id=A9E1779E-155D-451F-678DD7B58221E1E8\" },\n  // { src: \"/jsc2017m001167_2017_Space_Station_Science_in_Pictures_MP4_small.mp4\", title: \"2017 Space Station Science in Pictures (NASA)\", url: \"https://images.nasa.gov/details-jsc2017m001167_2017_Space_Station_Science_in_Pictures_MP4\" },\n];\n\nconst wrapppedTvText = '\\\nAbout this TV page\\n\\\n----------------------\\n\\\n\\n\\\nWhy these videos?\\n\\\n\\n\\\nI was looking for some public domain videos to use here, and the National Parks Service \\\nand NASA had some fun ones!\\n \\\n';\n\nconst screenWidth = 60;\nconst screenHeight = 21;\nexport {screenWidth, screenHeight};\n\n// left and top from [0,0] of screen\nconst tvLeft = contentLeft + 6;;\nconst tvTop = contentTop + 4;\nconst tvWidth = 90;\nconst tvHeight = 30;\n\n// left and top offset of screen from top-left of tv box\nconst tvScreenLeftOffset = 5;\nconst tvScreenTopOffset = 4;\n\n// left and top offset of on/off button pair from top-left of tv\nconst tvOffLeftOffset = 74;\nconst tvOnOffTopOffset = 26;\n\n// top for channel down/up button pair (same left as above)\nconst tvChannelTopOffset = 13;\nconst downToUpText = 'DOWN     ';\nconst tvChannelUpLeftOffset = tvOffLeftOffset + downToUpText.length;\n\n// top for edge mode on/off button pair (same left as above)\nconst tvEdgeModeTopOffset = 16;\n\n// left and top offset of knobs\nconst tvKnobLeftOffset = 73;\nconst tvKnobTopOfset = 5;\n\n// left and top of now showing text\nconst tvNowShowingLeft = 5;\nconst tvNowShowingTop = 26;\n\nconst offToOnText = 'OFF      ';\nconst tvOnLeftOffset = tvOffLeftOffset + offToOnText.length;\n\nexport default ({ tvOn, setTvOn, tvChannel, setTvChannel, tvEdgeModeOn, setTvEdgeModeOn, tvDimMultiplier, setTvDimMultiplier, fontSize }) => {\n  const tvNowShowingText = !tvOn ? '' : `Channel: ${CHANNELS[tvChannel].title} (link)`;\n\n  return {\n    stringRenderData: [\n      // instruction text\n      { type: 'text', data: { start: [tvLeft,contentTop], text: 'Press \"ON\" in the bottom right to watch some Unicode TV!' }},\n      { type: 'text', data: { start: [tvLeft,contentTop + 2], text: 'Press the number buttons to change the resolution.' }},\n\n      // tv box\n      { type: 'textrect', data: { start: [tvLeft,tvTop], width: tvWidth, text: tv }},\n\n      // tv off/on\n      { type: 'text', data: { start: [tvLeft + tvOffLeftOffset, tvTop + tvOnOffTopOffset], text: 'OFF', props: { className: `clickable ${tvOn ? '' : 'selected'}`, onClick: () => setTvOn(false) } }},\n      { type: 'text', data: { start: [tvLeft + tvOnLeftOffset, tvTop + tvOnOffTopOffset], text: 'ON', props: { className: `clickable ${tvOn ? 'selected' : ''}`, onClick: () => setTvOn(true) } }},\n\n      // tv channel down/up\n      { type: 'text', data: { start: [tvLeft + tvOffLeftOffset, tvTop + tvChannelTopOffset], text: 'DOWN', props: { className: 'clickable', onClick: () => setTvChannel((tvChannel - 1 + CHANNELS.length) % CHANNELS.length) } }},\n      { type: 'text', data: { start: [tvLeft + tvChannelUpLeftOffset, tvTop + tvChannelTopOffset], text: 'UP', props: { className: 'clickable', onClick: () => setTvChannel((tvChannel + 1) % CHANNELS.length) } }},\n\n      // tv edge mode off/on\n      { type: 'text', data: { start: [tvLeft + tvOffLeftOffset, tvTop + tvEdgeModeTopOffset], text: 'OFF', props: { className: `clickable ${tvEdgeModeOn ? '' : 'selected'}`, onClick: () => setTvEdgeModeOn(false) } }},\n      { type: 'text', data: { start: [tvLeft + tvOnLeftOffset, tvTop + tvEdgeModeTopOffset], text: 'ON', props: { className: `clickable ${tvEdgeModeOn ? 'selected' : ''}`, onClick: () => setTvEdgeModeOn(true) } }},\n\n      // resolution knobs\n      { type: 'text', data: { start: [tvLeft + tvKnobLeftOffset + 9, tvTop + tvKnobTopOfset + 0], text: '1', props: { className: `clickable ${tvDimMultiplier === 1 ? 'selected' : ''}`, onClick: () => setTvDimMultiplier(1) } }},\n      { type: 'text', data: { start: [tvLeft + tvKnobLeftOffset + 11, tvTop + tvKnobTopOfset + 2], text: '2', props: { className: `clickable ${tvDimMultiplier === 2 ? 'selected' : ''}`, onClick: () => setTvDimMultiplier(2) } }},\n      { type: 'text', data: { start: [tvLeft + tvKnobLeftOffset + 10, tvTop + tvKnobTopOfset + 4], text: '3', props: { className: `clickable ${tvDimMultiplier === 3 ? 'selected' : ''}`, onClick: () => setTvDimMultiplier(3) } }},\n      { type: 'text', data: { start: [tvLeft + tvKnobLeftOffset + 2, tvTop + tvKnobTopOfset + 4], text: '4', props: { className: `clickable ${tvDimMultiplier === 4 ? 'selected' : ''}`, onClick: () => setTvDimMultiplier(4) } }},\n      { type: 'text', data: { start: [tvLeft + tvKnobLeftOffset + 1, tvTop + tvKnobTopOfset + 2], text: '5', props: { className: `clickable ${tvDimMultiplier === 5 ? 'selected' : ''}`, onClick: () => setTvDimMultiplier(5) } }},\n      { type: 'text', data: { start: [tvLeft + tvKnobLeftOffset + 3, tvTop + tvKnobTopOfset + 0], text: '6', props: { className: `clickable ${tvDimMultiplier === 6 ? 'selected' : ''}`, onClick: () => setTvDimMultiplier(6) } }},\n\n      // now showing text\n      tvOn && { type: 'text', data: { start: [tvLeft + tvNowShowingLeft, tvTop + tvNowShowingTop], text: tvNowShowingText }},\n      tvOn && { type: 'text', data: { start: [tvLeft + tvNowShowingLeft + tvNowShowingText.length - 5, tvTop + tvNowShowingTop], text: 'link', props: { href: CHANNELS[tvChannel].url }}},\n\n      // about text\n      { type: 'text', data: { start: [tvLeft, tvTop + tvHeight + 5], maxWidth: tvWidth, text: wrapppedTvText }}\n    ],\n    stringRenderChildElementDataGenerator: (singleCharWidth, singleCharHeight, verticalCharPadding) => {\n      const left = (tvLeft + tvScreenLeftOffset) * singleCharWidth;\n      const top = (tvTop + tvScreenTopOffset) * singleCharHeight + (verticalCharPadding / 2);\n      const width = screenWidth * singleCharWidth;\n      const height = screenHeight * singleCharHeight;\n      const tvFontSize = fontSize / tvDimMultiplier;\n\n      // console.log(`tv container: ${left}, ${top}, ${width}, ${top}, ${tvDimMultiplier}, ${singleCharWidth}, ${singleCharHeight}, ${verticalCharPadding}`);\n\n      return [\n        <div key=\"tv-container\" style={{left:`${left}px`, top:`${top}px`, width:`${width}px`, height:`${height}px`, position:'absolute', fontSize:`${tvFontSize}px`, lineHeight:`${tvFontSize}px`}}>\n          <TV\n            key={`tv-screen-${tvDimMultiplier}`}\n            on={tvOn}\n            edgeModeOn={tvEdgeModeOn}\n            src={CHANNELS[tvChannel].src}\n            tvWidthPx={width}\n            tvHeightPx={height}\n          />\n        </div>\n      ];\n    }\n  };\n};\n","import { contentOffsets } from '../constants';\nconst [left, top] = contentOffsets;\n\nconst introText = '\\\nIn 2014, I joined Floored, a real estate tech startup specializing in \\\nspace visualization and optimization problems, as a full-stack engineer. \\\n';\n\n// const flooredLogo = '\\\n//   ..........                     \\\n// ..............                   \\\n//   ...............                \\\n//      ...............             \\\n//         ..............           \\\n//            ..............        \\\n//               ..............     \\\n//                 ..............∘· \\\n//                    ........·•*#- \\\n//                       ..·•*####- \\\n//       ·∘               ∘#######- \\\n//       ∘##*∘·           •#######- \\\n//       ∘#####-∘         •#######- \\\n//       ∘######-·        •#####*∘. \\\n//       ∘###-•......     •##*-·    \\\n//       ∘*•·..........   •-∘       \\\n//          ............·-∘         \\\n//             ......·•*##∘         \\\n//               .·•*#####∘         \\\n//               ·########∘         \\\n//               ·########∘         \\\n//               ·########∘         \\\n//       ·•.     ·######*∘.         \\\n//       ∘###•∘  ·###-∘             \\\n//       ∘#####*•∘-∘.               \\\n//       ∘#######*                  \\\n//       ∘#######-                  \\\n//       ∘#######-                  \\\n//       ∘#######-                  \\\n//       ∘#######-                  \\\n//       ∘#######-                  \\\n//       ∘#####-•.                  \\\n//       ∘##*•·                     \\\n//       ∘-·                        \\\n// ';\n// const flooredLogoWidth = 33;\n\nconst flooredLogo = '\\\n.........          \\\n   ........        \\\n      ........     \\\n        .........  \\\n           ....∘o#∘\\\n   ·         ∘m###∘\\\n   #m∘       o####∘\\\n   ####∘     o###m·\\\n   #m•....   o#•.  \\\n   . ......·•·     \\\n       ..∘o##·     \\\n        #####·     \\\n        #####·     \\\n   m∘   ###o·      \\\n   ###o·m∘         \\\n   #####           \\\n   #####           \\\n   #####           \\\n   ####m           \\\n   ##o·            \\\n   ·               \\\n';\nconst flooredLogoWidth = 19;\n\n// const flooredLogo = '\\\n//    .                   \\\n//  ......                \\\n// ..........             \\\n//   ...........          \\\n//      ...........       \\\n//         ..........     \\\n//           .............\\\n//               .....∘o#∘\\\n//                 ·•####∘\\\n//    ·#o·         o#####∘\\\n//    ·###m•.      o#####∘\\\n//    ·####o·      o###m∘.\\\n//    ·#o∘......   om∘.   \\\n//     ...........•∘      \\\n//         ...·•m##·      \\\n//          .o#####·      \\\n//          .######·      \\\n//          .######·      \\\n//    ·#o.  .###m∘        \\\n//    ·####o∘o∘           \\\n//    ·#####m             \\\n//    ·#####m             \\\n//    ·#####m             \\\n//    ·#####m             \\\n//    ·#####∘             \\\n//    ·##o·               \\\n//    .·                  \\\n// ';\n// const flooredLogoWidth = 22;\n\nconst transitionText = '\\\nIn 2017, Floored was acquired by CBRE, and our team became CBRE Build NYC. \\\n';\n\n// const cbreBuilderHat = '\\\n//                      .·•-******-∘•-*****-·                             \\\n//                 ·∘-*********-********-****-·                           \\\n//                ·*********∘    ·*****·  ·****-∘                         \\\n//           .·∘•************-·    ·****-·  ·-****∘                       \\\n//          ∘********-•∘·.•****-.    ∘****-.  ·****-·                     \\\n//          ****•∘·         •****-·    ∘****-·  ·****-·                   \\\n//         ∘***               ∘****-·    ∘****•   ·-***.                  \\\n//        ·***∘   .··∘·         ∘-***-·    -**•     -**-                  \\\n//       ∘-*************•.        ∘-***∘            ∘****•                \\\n//      ∘**********---****-∘        •**-             *****•               \\\n//      ***-∘·.        ∘*****•.     .***∘            ∘*****.              \\\n//     •***.             ·-*****∘.   ∘***             *****•              \\\n//    ·***∘                .•*****·  .***·            -*****              \\\n//    -***                    ∘-***.  -**-            ·*****∘             \\\n//   .***∘                      ***•  ·***∘            •*****·            \\\n//  ·•***∘                      -***   ****            .*******∘          \\\n//  *****·                      .***∘  ∘***·            -*******•.        \\\n// .****   ..                    •***.  -**-      .·∘•-*****-∘*****•·     \\\n//  ·***-. •***••                .***-∘·∘***•∘•-**********-•. .∘******-∘. \\\n//   .****-******.   -•∘·.        *****************-•∘·.          ·•****∘ \\\n//    ·**********•∘·.*****•       ∘∘•--*******-∘∘·.                 .***∘ \\\n//      ··∘•-*************-∘··.           ..                        ∘***∘ \\\n//             .·∘•-****************-•∘·.                     ..··•*****· \\\n//                    .·∘•---***************-••••••••••---***********•·   \\\n//                                ..·∘•-************************--•·      \\\n//                                         .···∘∘∘∘∘∘∘∘∘··..              \\\n// ';\n// const cbreBuilderHatWidth = 71;\n\nconst cbreBuilderHat = '\\\n         ·∘∘•##•••##∘              \\\n       ∘####•· ∘•#··•#∘            \\\n    ·##•∘···•#∘  ∘••··•#∘          \\\n    ••       ·•#∘  ∘#• ·•#         \\\n   ∘#••###•·   ·•#·     ·#•·       \\\n  ∘#∘··  ·∘#•∘   #∘      •##       \\\n  #•        ·•#∘ ∘#      ·##∘      \\\n ∘#·          ∘#· #∘      •#•·     \\\n∘#•            #• •#      ∘###•    \\\n·#• ∘∘∘        ∘#∘∘#∘·∘••#••∘·∘#•∘·\\\n ·•####∘·#•∘   ·∘••#••∘··       ∘#∘\\\n     ·∘∘••##•••∘∘∘·           ··•#∘\\\n           ····∘∘∘•##•••••###•••∘  \\\n';\nconst cbreBuilderHatWidth = 35;\n\n// const cbreBuilderHat = '\\\n//                 .·.   .·                   \\\n//            .·∘•mmmm••mmmm∘                 \\\n//          ∘mmmmm•·.•mmm∘·omm∘               \\\n//      .∘•ommmoomm∘. .•mm•.·omm∘             \\\n//      omo•·.   .•mm•  .omm•.·omo∘           \\\n//     ∘mo         .•mm•  .omo  ·mm·          \\\n//    ·mmoommmm•·    .•mm.  .    •mm∘         \\\n//   .mmo•∘∘··∘mmm∘    ∘m•       .mmm∘        \\\n//   om∘        ·•mm•.  mm·       •mmm        \\\n//  ·mm           .•mm· •mo       .mmm·       \\\n//  om∘             ·mo .mm.       ommo·      \\\n// •mm·              mm· om•       ·mmmmo.    \\\n// omo .∘·.          ∘mo .mm· ··∘•ommm••mmo•· \\\n//  omoommm∘ .∘·.    .mmmmmmmmmmo•∘·..   ·•mmo\\\n//   ∘ommmmmo•mmm∘    .··∘∘•∘·.            ·mo\\\n//       .·∘•ommmmmmmoo•∘··.         ...··omm•\\\n//             .···∘∘∘•oommmmmmmmmmmmmmmmmo∘. \\\n//                        ..··∘∘∘∘∘∘··...     \\\n// ';\n// const cbreBuilderHatWidth = 43;\n\n// const cbreBuilderHat = '\\\n//                      ..     ..                       \\\n//                .·∘•mmmmo∘•mmmm•.                     \\\n//             ∘•mmmmmo•∘mmmmm••mmm•                    \\\n//          .·•mmmmmmm∘.  ·omm•. ∘mmm•.                 \\\n//        ommmmmo•∘.∘mmm•.  ·ommo. ·mmm•.               \\\n//       ·mm•∘.       •mmm∘   ∘mmm•. ∘mmm•              \\\n//       omo            ∘mmm•   ·mmm   ∘mm·             \\\n//     .•mmooommmm•.      ∘mmm.  ..     mmm•            \\\n//     ommmmmmo••mmmo·      mm•         •mmm•           \\\n//    ·mm∘.       ·ommm•.   ∘mm·        .mmmm·          \\\n//   .mmo            ∘mmmo·  mmo         ∘mmmo          \\\n//   •mm.              ·omm. •mm.         mmmm.         \\\n//   mmo                .mm• .mm•         •mmmo·        \\\n// .ommo                 omm  omm         .mmmmmo       \\\n// ·mmo  .               ·mm∘ ·mm∘     ·∘∘•mmm•mmm•·.   \\\n//  ∘mm• ommo∘            mmm•∘omm••ommmmmmo•∘  ∘ommmm• \\\n//   •mmmmmmmo  ·mo•∘     •mmmmmmmmmmo•∘·.        .∘omm.\\\n//    ·∘•ommmmmmmmmmm·..      .···.                 •mm.\\\n//          .·∘•ommmmmmmmmmmo•∘··.          ..···∘ommm• \\\n//                .·∘∘∘•••oommmmmmmooooooommmmmmmmmo∘.  \\\n//                            .·∘∘•••ooooo••∘∘∘··..     \\\n// ';\n// const cbreBuilderHatWidth = 53;\n\nconst flooredLeftOffset = Math.floor((cbreBuilderHatWidth - flooredLogoWidth) / 2); // heh\n\nconst endingText = '\\\nWorking on the Floored / CBRE Build team has been an incredible experience.\\n\\\n\\n\\\n\\n\\\nSome projects I\\'ve enjoyed:\\n\\\n\\n\\\n- building 3D scene-editing tools for our amazingly talented 3D art team\\n\\\n\\n\\\n- helping build a floorplan optimization product from the first commits through the MVP (and beyond)\\n\\\n\\n\\\n- accelerating 2D graph operations in said product\\n\\\n\\n\\\n- helping build a system for visualizing 2D floorplans in 3D\\n\\\n\\n\\\n- helping implement a faceted navigation feature using Algolia\\n\\\n\\n\\\n- spreading the word about our in-house WebGL graphics engine through documentation, tutorials, and presentations \\n\\\n\\n\\\n- contributing to a database system upgrade (CouchDB 1.x --> 2.x) and writing a [blog post](https://medium.com/cbrebuild/moving-to-couchdb-2-x-c2bc606970cb) about it. \\\n';\n\nexport default () => {\n  return {\n    stringRenderData: [\n      { type: 'text', data: { start: [left,top], maxWidth: 80, rightMargin: 5, text: introText }},\n      { type: 'textrect', data: { start: [left + flooredLeftOffset,2], isYRelative: true, width: flooredLogoWidth, text: flooredLogo, props: { className: 'floored-purple', 'aria-hidden': true } }},\n      { type: 'text', data: { start: [left,4], isYRelative: true, maxWidth: 80, rightMargin: 5, text: transitionText }},\n      { type: 'textrect', data: { start: [left,3], isYRelative: true, width: cbreBuilderHatWidth, text: cbreBuilderHat, props: { className: 'cbre', 'aria-hidden': true } }},\n      { type: 'text', data: { start: [left,4], isYRelative: true, maxWidth: 80, rightMargin: 5, text: endingText }},\n      { type: 'text', data: { start: [left,1], isYRelative: true, maxWidth: 80, text: '\\n' }},\n    ]\n  };\n};","import { contentOffsets, maxPagePxWidth, isTouchScreen } from '../constants';\n\nconst wrappedExplanation = `\\\nAbout this website\\n\\\n---------------------\\n\\\nThe idea for this website was to use characters as the building blocks for the page\\'s \\\ncontent -- one big string of characters that wraps at the right side of the page or after ${maxPagePxWidth}px. \\\nSome characters are wrapped in separate elements for styling and interactivity, \\\nand the \"screen\" on the TV page is its own \"character render area\", but hopefully \\\nthe site retains the spirit of the original idea. \\\n${!isTouchScreen ? '' : '\\n\\n(Try using a non-touch display to view the TV page.)'}\\n\\\n\\n\\n\\n\\n\\\nWhy??\\n\\\n---------------------\\n\\\nI think ASCII/unicode art looks neat, and it was an interesting experiment!\\n\\\n\\n\\\nI also think train station-style flip boards are fun, so I wanted to try \\\nto incorporate that type of animation into the page transitions here.\\n\\\n\\n\\\nHowever, this approach to creating a site doesn't lend itself well to accessibility. \\\n[Magdalena Henke](https://www.linkedin.com/in/magdalena-henke/) has helped me think through \\\nsome of the accessibility concerns of this page (I've only started to incorporate her feedback!); \\\nif you would like help improving or auditing the accessibility of your page, she will happily help \\\nyou, too!\\n\\\n\\n\\n\\n\\n\\\nResources\\n\\\n---------------------\\n\\\nThis site was built using React and is hosted on GitHub pages. A couple React + GitHub Pages resources I found helpful: \\\n`;\n\n// TODO: Magdalena Henke helped me think through some of the accessibility concerns of this page and she’ll happily help you, too. (link my linkedin)\n\nconst [left, top] = contentOffsets;\n\nexport default () => {\n  return {\n    stringRenderData: [\n      { type: 'text', data: { start: [left,top], maxWidth: 80, rightMargin: 5, text: wrappedExplanation}},\n      { type: 'text', data: { start: [left + 2,2], isYRelative: true, maxWidth: 80, text: 'create-react-app', props: { href: 'https://github.com/facebook/create-react-app' } }},\n      { type: 'text', data: { start: [left + 2,1], isYRelative: true, maxWidth: 80, text: 'gh-pages', props: { href: 'https://www.npmjs.com/package/gh-pages' } }},\n      { type: 'text', data: { start: [left + 2,1], isYRelative: true, maxWidth: 80, text: 'this post', props: { href: 'https://codeburst.io/deploy-react-to-github-pages-to-create-an-amazing-website-42d8b09cd4d' } }},\n      { type: 'text', data: { start: [left,1], isYRelative: true, maxWidth: 80, text: '\\n ' }}\n    ]\n  };\n};","import home from './home';\nimport projects from './projects';\nimport tv from './tv';\nimport work from './work';\nimport about from './about';\n\nexport default {\n  home,\n  projects,\n  tv,\n  work,\n  about\n};","import { navWidth, topBarHeight, isTouchScreen } from '../constants';\n\nconst email = 'ben.leveque@gmail.com';\nconst linkedin = 'linkedin';\n\nconst navTextLeft = 3;\nconst navTextTopBetween = 3;\n\nconst getNavProps = (onClick, pageName) => {\n  return { className: 'clickable', 'aria-label': `Navigate to ${pageName} page`, onClick: () => onClick(pageName) };\n};\n\nexport default (onNavClick) => {\n  return [\n    // top info\n    { type: 'text', data: { start: [navWidth + 2, 1], text: 'Ben LeVeque' }},\n    { type: 'text', data: { start: [-(email.length + 3), 3], text: email }},\n    { type: 'text', data: { start: [-(linkedin.length + 3), 4], text: linkedin, props: { href: 'https://www.linkedin.com/in/benjamin-leveque-5a534361/' } }},\n\n    // left nav\n    // { type: 'text', data: { start: [navTextLeft, topBarHeight + 1], text: 'Home', props: getNavProps(onNavClick, 'home') }},\n    // { type: 'text', data: { start: [navTextLeft, navTextTopBetween], isYRelative: true, text: 'Work', props: getNavProps(onNavClick, 'work') }},\n    // { type: 'text', data: { start: [navTextLeft, navTextTopBetween], isYRelative: true, text: 'TV', props: getNavProps(onNavClick, 'tv') }},\n    // { type: 'text', data: { start: [navTextLeft, navTextTopBetween], isYRelative: true, text: 'About', props: getNavProps(onNavClick, 'about') }},\n\n    // nav\n    { type: 'text', data: { start: ['5%', topBarHeight - 1], text: 'Home', props: getNavProps(onNavClick, 'home') }},\n    { type: 'text', data: { start: ['30%', topBarHeight - 1], text: 'Work', props: getNavProps(onNavClick, 'work') }},\n    { type: 'text', data: { start: ['55%', topBarHeight - 1], text: 'About', props: getNavProps(onNavClick, 'about') }},\n    !isTouchScreen && { type: 'text', data: { start: ['80%', topBarHeight - 1], text: 'TV', props: getNavProps(onNavClick, 'tv') }},\n\n    // lines\n    { type: 'line', data: { start: [navWidth, topBarHeight - 2], end: ['100%', topBarHeight - 2] }},\n    { type: 'line', data: { start: [navWidth, topBarHeight], end: ['100%', topBarHeight] }}\n    // { type: 'line', data: { start: [navWidth, 0], end: [navWidth, '98%'] }}\n  ];\n};","const animationHelper = ({ animationLength = 400, intervalLength = 50, onTick, onDone }) => {\n  let timeInInterval = 0;\n  let interval = setInterval(() => {\n    timeInInterval += intervalLength;\n\n    onTick(Math.min(1, timeInInterval / animationLength));\n\n    if (timeInInterval >= animationLength) {\n      clearInterval(interval);\n      onDone();\n    }\n  }, intervalLength);\n};\n\nexport default animationHelper;\n","import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './HomePage.css';\n\nimport StringRenderArea from './StringRenderArea';\nimport pageDataGenerators from '../pageDataGenerators/index';\nimport navDataGenerator from '../pageDataGenerators/nav';\nimport animationHelper from '../animationHelper';\n\n// responsibilities:\n// - keep track of nav state\n// - gather data to pass to StringRenderArea\n\nconst SHOULD_ANIMATE = true;\nconst FONT_SIZE = 14;\n\nconst HomePage = () => {\n  const location = useLocation();\n  let pathname = location.pathname.substring(1);\n  if (!pageDataGenerators.hasOwnProperty(pathname)) pathname = 'home';\n\n  let [pageName, setPageName] = useState(pathname);\n  let [newPageData, setNewPageData] = useState(null);\n  let [interpolationParameter, setInterpolationParameter] = useState(0);\n  let [tvOn, setTvOn] = useState(false);\n  let [tvChannel, setTvChannel] = useState(0);\n  let [tvEdgeModeOn, setTvEdgeModeOn] = useState(false);\n  let [tvDimMultiplier, setTvDimMultiplier] = useState(4);\n\n  let pageSpecificState = {\n    tv: {\n      tvOn,\n      setTvOn,\n      tvChannel,\n      setTvChannel,\n      tvEdgeModeOn,\n      setTvEdgeModeOn,\n      tvDimMultiplier,\n      setTvDimMultiplier,\n      fontSize: FONT_SIZE\n    }\n  };\n\n  const switchPage = newPageName => {\n    if (!SHOULD_ANIMATE) return setPageName(newPageName);\n\n    const { stringRenderData: newStringRenderData } = pageDataGenerators[newPageName](pageSpecificState[newPageName]);\n\n    setNewPageData([ ...newStringRenderData, ...navDataGenerator(switchPage)]);\n\n    animationHelper({\n      onTick: setInterpolationParameter,\n      onDone: () => {\n        setPageName(newPageName);\n        setNewPageData(null);\n      }\n    });\n  };\n\n  const { stringRenderData, stringRenderChildElementDataGenerator } = pageDataGenerators[pageName](pageSpecificState[pageName]);\n  const navRenderData = navDataGenerator(switchPage);\n\n  return (\n    <div className=\"root\" style={{ fontSize: `${FONT_SIZE}px`, lineHeight: `${FONT_SIZE}px` }}>\n      <StringRenderArea\n        className=\"home-background\"\n        fontSize={FONT_SIZE}\n        data={[...stringRenderData, ...navRenderData]}\n        childElementDataGenerator={(!newPageData && stringRenderChildElementDataGenerator)}\n        newData={newPageData}\n        interpolationParameter={interpolationParameter}\n        autoResize\n       />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\">\n          <HomePage />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}